==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/matijaoe/frontend_mentor
+ reporef=master
+ repopath=./todo-app
++ echo github.com/matijaoe/frontend_mentor
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-eb1212afa72a
++ echo 'github.com/matijaoe/frontend_mentor;master;./todo-app'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/84b726bdd905
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/matijaoe/frontend_mentor/bWFzdGVyCg/Li90b2RvLWFwcAo
+ jq -nc --arg key analysis_key --arg value github.com/matijaoe/frontend_mentor/bWFzdGVyCg/Li90b2RvLWFwcAo '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce b63816d4e2808b42
+ jq -nc --arg key analysis_nonce --arg value b63816d4e2808b42 '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/matijaoe/frontend_mentor
+ jq -nc --arg key input_repo_name --arg value github.com/matijaoe/frontend_mentor '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref master
+ jq -nc --arg key input_repo_ref --arg value master '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./todo-app
+ jq -nc --arg key input_repo_path --arg value ./todo-app '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-03T00:11:03Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-03T00:11:03Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-eb1212afa72a
+ pushd /tmp/twcr-eb1212afa72a
+ '[' -d .git ']'
+ git clone --depth=1 -b master https://github.com/matijaoe/frontend_mentor.git .
/tmp/twcr-eb1212afa72a /twcr
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-03T00:11:05Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-03T00:11:05Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha 2018df6581673c77416b7ace9dc801d13144821f
+ jq -nc --arg key exec_repo_commit_sha --arg value 2018df6581673c77416b7ace9dc801d13144821f '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2021-03-18 18:18:27 +0100' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2021-03-18T17:18:27Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2021-03-18T17:18:27Z '{ key: $key, value: $value }'
/tmp/twcr-eb1212afa72a/todo-app /tmp/twcr-eb1212afa72a /twcr
+ '[' -z ./todo-app ']'
+ pushd ./todo-app
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ tailwind_config_file_name=tailwind.config.js
+ writetaskstat exec_tailwind_config_file tailwind.config.js
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.js '{ key: $key, value: $value }'
+ cp tailwind.config.js /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
+ package_manager_name=npm
+ grep -q '"packageManager":[^"]+"pnpm@"' package.json
+ '[' -f pnpm-lock.yaml ']'
+ '[' -f pnpm-workspace.yaml ']'
+ '[' -f /tmp/twcr-eb1212afa72a/pnpm-workspace.yaml ']'
+ cat README.md
+ grep -q 'pnpm install'
+ grep -q '"packageManager":[^"]+"yarn@"' package.json
+ '[' -f yarn.lock ']'
+ grep -q '":[^"]+"workspace:' package.json
+ cat README.md
+ grep -q 'yarn install'
+ writetaskstat exec_node_package_manager npm
+ jq -nc --arg key exec_node_package_manager --arg value npm '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-03T00:11:05Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-03T00:11:05Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
>>> {
>>>   "name": "my-project",
>>>   "version": "0.0.0",
>>>   "dependencies": {},
>>>   "devDependencies": {
>>>     "tailwindcss": "^2.0.3"
>>>   }
>>> }+ set +e
+ /twcr/worker/../worker/pm-install.sh npm /tmp/twcr-eb1212afa72a /twcr/mnt/results
+ package_manager_name=npm
+ procdir=/tmp/twcr-eb1212afa72a
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
++ '[' -f package-lock.json ']'
++ echo ci
+ npm ci --ignore-engines
npm WARN old lockfile 
npm WARN old lockfile The package-lock.json file was created with an old version of npm,
npm WARN old lockfile so supplemental metadata must be fetched from the registry.
npm WARN old lockfile 
npm WARN old lockfile This is a one-time fix-up, please be patient...
npm WARN old lockfile 

added 88 packages, and audited 89 packages in 6s

11 packages are looking for funding
  run `npm fund` for details

8 vulnerabilities (6 moderate, 1 high, 1 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
npm notice 
npm notice New minor version of npm available! 10.2.4 -> 10.5.0
npm notice Changelog: <https://github.com/npm/cli/releases/tag/v10.5.0>
npm notice Run `npm install -g npm@10.5.0` to update!
npm notice 
+ npm query '*'
+ jq -cr '
        map({ name: .name, version: .version })
        | map(select(.name))
        | sort_by(.name)[]
      '
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=2.0.3
+ tailwind_config_exporter=tailwind.config.exporter3.mjs
+ true
+ cp /twcr/worker/../worker/tailwind.config.exporter3.mjs ./
+ set +e
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
node:internal/modules/esm/resolve:263
    throw new ERR_MODULE_NOT_FOUND(
          ^

Error [ERR_MODULE_NOT_FOUND]: Cannot find module '/tmp/twcr-eb1212afa72a/todo-app/node_modules/tailwindcss/lib/lib/load-config.js' imported from /tmp/twcr-eb1212afa72a/todo-app/tailwind.config.exporter3.mjs
    at finalizeResolution (node:internal/modules/esm/resolve:263:11)
    at moduleResolve (node:internal/modules/esm/resolve:908:10)
    at defaultResolve (node:internal/modules/esm/resolve:1131:11)
    at ModuleLoader.defaultResolve (node:internal/modules/esm/loader:390:12)
    at ModuleLoader.resolve (node:internal/modules/esm/loader:359:25)
    at ModuleLoader.getModuleJob (node:internal/modules/esm/loader:234:38)
    at ModuleWrap.<anonymous> (node:internal/modules/esm/module_job:85:39)
    at link (node:internal/modules/esm/module_job:84:36) {
  code: 'ERR_MODULE_NOT_FOUND',
  url: 'file:///tmp/twcr-eb1212afa72a/todo-app/node_modules/tailwindcss/lib/lib/load-config.js'
}

Node.js v21.6.2
+ exitcode=1
+ set -e
+ [[ 1 != \0 ]]
+ [[ tailwind.config.exporter3.mjs == \t\a\i\l\w\i\n\d\.\c\o\n\f\i\g\.\e\x\p\o\r\t\e\r\3\.\m\j\s ]]
+ echo '[worker] WARN: exporter failed; retrying with alternative'
[worker] WARN: exporter failed; retrying with alternative
+ tailwind_config_exporter=tailwind.config.exporter2.cjs
+ continue
+ true
+ cp /twcr/worker/../worker/tailwind.config.exporter2.cjs ./
+ set +e
+ node ./tailwind.config.exporter2.cjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ break
+ echo 'module.exports={plugins:['
+ jq -rs '
        map(select(.name | startswith("@tailwindcss/")))
        | map("require(" + ( .name | tojson ) + "),")[]
      '
+ echo ']}'
+ cat tailwind.config.js
+ sed 's/^/>>> /'
>>> module.exports={plugins:[
>>> ]}
+ node ./tailwind.config.exporter2.cjs tailwind.config.js
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_end 2024-03-03T00:11:13Z
+ jq -nc --arg key timestamp_attempt_squash_end --arg value 2024-03-03T00:11:13Z '{ key: $key, value: $value }'
+ break
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_end 2024-03-03T00:11:13Z
+ jq -nc --arg key timestamp_end --arg value 2024-03-03T00:11:13Z '{ key: $key, value: $value }'
+ rm /twcr/mnt/results/extract-failed
+ touch /twcr/mnt/results/extract-completed
