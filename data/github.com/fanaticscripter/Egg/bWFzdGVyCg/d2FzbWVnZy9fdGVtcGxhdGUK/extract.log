==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/fanaticscripter/Egg
+ reporef=master
+ repopath=./wasmegg/_template
+ '[' true == true ']'
+ grep -q '^././'
++ echo github.com/fanaticscripter/Egg
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-0b1966fd1e84
++ echo 'github.com/fanaticscripter/Egg;master;./wasmegg/_template'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/cb7390dbf4a2
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/fanaticscripter/Egg/bWFzdGVyCg/Li93YXNtZWdnL190ZW1wbGF0ZQo
+ jq -nc --arg key analysis_key --arg value github.com/fanaticscripter/Egg/bWFzdGVyCg/Li93YXNtZWdnL190ZW1wbGF0ZQo '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce 7f6ec6c7ffde1ba6
+ jq -nc --arg key analysis_nonce --arg value 7f6ec6c7ffde1ba6 '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/fanaticscripter/Egg
+ jq -nc --arg key input_repo_name --arg value github.com/fanaticscripter/Egg '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref master
+ jq -nc --arg key input_repo_ref --arg value master '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./wasmegg/_template
+ jq -nc --arg key input_repo_path --arg value ./wasmegg/_template '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-04T09:38:52Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-04T09:38:52Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-0b1966fd1e84
/tmp/twcr-0b1966fd1e84 /twcr
+ pushd /tmp/twcr-0b1966fd1e84
+ '[' -d .git ']'
+ git clone --depth=1 -b master https://github.com/fanaticscripter/Egg.git .
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-04T09:38:53Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-04T09:38:53Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha 66421e10e3839b53b48120aa8cc945de316c0a75
+ jq -nc --arg key exec_repo_commit_sha --arg value 66421e10e3839b53b48120aa8cc945de316c0a75 '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2024-03-01 17:00:24 +0000' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2024-03-01T17:00:24Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2024-03-01T17:00:24Z '{ key: $key, value: $value }'
/tmp/twcr-0b1966fd1e84/wasmegg/_template /tmp/twcr-0b1966fd1e84 /twcr
+ '[' -z ./wasmegg/_template ']'
+ pushd ./wasmegg/_template
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ tailwind_config_file_name=tailwind.config.js
+ writetaskstat exec_tailwind_config_file tailwind.config.js
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.js '{ key: $key, value: $value }'
+ cp tailwind.config.js /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-0b1966fd1e84/wasmegg/_template
+ package_manager_name=
+ '[' -z '' ']'
+ '[' ./wasmegg/_template '!=' ./ ']'
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-0b1966fd1e84
+ package_manager_name=yarn
+ '[' -z yarn ']'
+ writetaskstat exec_node_package_manager yarn
+ jq -nc --arg key exec_node_package_manager --arg value yarn '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-04T09:38:53Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-04T09:38:53Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
>>> {
>>>   "name": "@@ID@@",
>>>   "version": "0.0.0",
>>>   "license": "MIT",
>>>   "dependencies": {},
>>>   "devDependencies": {
>>>     "@tailwindcss/forms": "^0.3.4",
>>>     "tailwindcss": "^2.2.19"
>>>   }
>>> }+ rm -f package-lock.json pnpm-lock.yaml yarn.lock
+ '[' ./wasmegg/_template '!=' ./ ']'
+ rm -f /tmp/twcr-0b1966fd1e84/package.json /tmp/twcr-0b1966fd1e84/package-lock.json /tmp/twcr-0b1966fd1e84/pnpm-lock.yaml /tmp/twcr-0b1966fd1e84/yarn.lock
+ set +e
+ /twcr/worker/../worker/pm-install.sh yarn /tmp/twcr-0b1966fd1e84 /twcr/mnt/results
+ package_manager_name=yarn
+ procdir=/tmp/twcr-0b1966fd1e84
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ '[' -z http://tid_6910e76ee6db:ok@172.18.0.2:3128 ']'
+ yarn config set httpProxy http://tid_6910e76ee6db:ok@172.18.0.2:3128
yarn config v1.22.19
info Visit https://yarnpkg.com/en/docs/cli/config for documentation about this command.
error package.json: Name contains illegal characters
+ exitcode=1
+ set -e
+ [[ 1 != \0 ]]
+ [[ squash == \s\q\u\a\s\h ]]
+ echo '[worker] WARN: package manager failed; retrying with full install'
[worker] WARN: package manager failed; retrying with full install
+ attempt_mode=full
+ continue
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_full_begin 2024-03-04T09:38:54Z
+ jq -nc --arg key timestamp_attempt_full_begin --arg value 2024-03-04T09:38:54Z '{ key: $key, value: $value }'
+ [[ full == \s\q\u\a\s\h ]]
+ git clean -fdx
+ git reset --hard
HEAD is now at 66421e1 contracts: update data/contracts.json (from GitHub Actions)
+ set +e
+ /twcr/worker/../worker/pm-install.sh yarn /tmp/twcr-0b1966fd1e84 /twcr/mnt/results
+ package_manager_name=yarn
+ procdir=/tmp/twcr-0b1966fd1e84
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ '[' -z http://tid_6910e76ee6db:ok@172.18.0.2:3128 ']'
+ yarn config set httpProxy http://tid_6910e76ee6db:ok@172.18.0.2:3128
yarn config v1.22.19
info Visit https://yarnpkg.com/en/docs/cli/config for documentation about this command.
error package.json: Name contains illegal characters
+ exitcode=1
+ set -e
+ [[ 1 != \0 ]]
+ [[ full == \s\q\u\a\s\h ]]
+ exit 1
