==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/byplay-io/byplay-desktop
+ reporef=byplay20
+ repopath=./
+ '[' true == true ']'
+ grep -q '^././'
++ echo github.com/byplay-io/byplay-desktop
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-1957180e93fa
++ echo 'github.com/byplay-io/byplay-desktop;byplay20;./'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/75e1cea8d2c1
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/byplay-io/byplay-desktop/YnlwbGF5MjAK/Li8K
+ jq -nc --arg key analysis_key --arg value github.com/byplay-io/byplay-desktop/YnlwbGF5MjAK/Li8K '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce 02d65dd02676418d
+ jq -nc --arg key analysis_nonce --arg value 02d65dd02676418d '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/byplay-io/byplay-desktop
+ jq -nc --arg key input_repo_name --arg value github.com/byplay-io/byplay-desktop '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref byplay20
+ jq -nc --arg key input_repo_ref --arg value byplay20 '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./
+ jq -nc --arg key input_repo_path --arg value ./ '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-04T11:44:18Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-04T11:44:18Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-1957180e93fa
/tmp/twcr-1957180e93fa /twcr
+ pushd /tmp/twcr-1957180e93fa
+ '[' -d .git ']'
+ git clone --depth=1 -b byplay20 https://github.com/byplay-io/byplay-desktop.git .
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-04T11:44:19Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-04T11:44:19Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha 7443413ea94ac6af51b426134189001acdd64007
+ jq -nc --arg key exec_repo_commit_sha --arg value 7443413ea94ac6af51b426134189001acdd64007 '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2023-12-05 11:44:30 +0100' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2023-12-05T10:44:30Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2023-12-05T10:44:30Z '{ key: $key, value: $value }'
+ '[' -z ./ ']'
+ pushd ./
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ tailwind_config_file_name=tailwind.config.js
+ writetaskstat exec_tailwind_config_file tailwind.config.js
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.js '{ key: $key, value: $value }'
/tmp/twcr-1957180e93fa /tmp/twcr-1957180e93fa /twcr
+ cp tailwind.config.js /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-1957180e93fa
+ package_manager_name=
+ '[' -z '' ']'
+ '[' ./ '!=' ./ ']'
+ '[' -z '' ']'
+ package_manager_name=npm
+ writetaskstat exec_node_package_manager npm
+ jq -nc --arg key exec_node_package_manager --arg value npm '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-04T11:44:19Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-04T11:44:19Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
>>> {
>>>   "description": "Desktop client for Byplay Camera, allowing you to download shot videos and import them into a VFX package",
>>>   "keywords": [
>>>     "vfx",
>>>     "3d",
>>>     "camera tracking",
>>>     "blender",
>>>     "houdini",
>>>     "c4d",
>>>     "byplay"
>>>   ],
>>>   "homepage": "https://github.com/byplay-io/byplay-desktop#readme",
>>>   "bugs": {
>>>     "url": "https://github.com/byplay-io/byplay-desktop/issues"
>>>   },
>>>   "repository": {
>>>     "type": "git",
>>>     "url": "git+https://github.com/byplay-io/byplay-desktop.git"
>>>   },
>>>   "license": "MIT",
>>>   "author": {
>>>     "name": "Vadim Lobanov & BYPLAY LLC",
>>>     "email": "vadim@byplay.io",
>>>     "url": "https://github.com/byplay-io"
>>>   },
>>>   "contributors": [
>>>     {
>>>       "name": "Vadim Lobanov",
>>>       "email": "vadim@byplay.io",
>>>       "url": "https://github.com/vlobanov"
>>>     }
>>>   ],
>>>   "main": "./src/main/main.ts",
>>>   "browserslist": [],
>>>   "jest": {
>>>     "moduleDirectories": [
>>>       "node_modules",
>>>       "release/app/node_modules",
>>>       "src"
>>>     ],
>>>     "moduleFileExtensions": [
>>>       "js",
>>>       "jsx",
>>>       "ts",
>>>       "tsx",
>>>       "json"
>>>     ],
>>>     "moduleNameMapper": {
>>>       "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/.erb/mocks/fileMock.js",
>>>       "\\.(css|less|sass|scss)$": "identity-obj-proxy"
>>>     },
>>>     "setupFiles": [
>>>       "./.erb/scripts/check-build-exists.ts"
>>>     ],
>>>     "testEnvironment": "jsdom",
>>>     "testEnvironmentOptions": {
>>>       "url": "http://localhost/"
>>>     },
>>>     "testPathIgnorePatterns": [
>>>       "release/app/dist",
>>>       ".erb/dll"
>>>     ],
>>>     "transform": {
>>>       "\\.(ts|tsx|js|jsx)$": "ts-jest"
>>>     }
>>>   },
>>>   "dependencies": {},
>>>   "devDependencies": {
>>>     "tailwindcss": "^3.3.3"
>>>   },
>>>   "build": {
>>>     "productName": "Byplay Desktop",
>>>     "appId": "io.byplay.desktop",
>>>     "asar": true,
>>>     "asarUnpack": "**\\*.{node,dll}",
>>>     "files": [
>>>       "dist",
>>>       "node_modules",
>>>       "package.json"
>>>     ],
>>>     "afterSign": ".erb/scripts/notarize.js",
>>>     "mac": {
>>>       "target": {
>>>         "target": "default",
>>>         "arch": [
>>>           "arm64",
>>>           "x64"
>>>         ]
>>>       },
>>>       "type": "distribution",
>>>       "hardenedRuntime": true,
>>>       "entitlements": "assets/entitlements.mac.plist",
>>>       "entitlementsInherit": "assets/entitlements.mac.plist",
>>>       "gatekeeperAssess": false,
>>>       "notarize": {
>>>         "teamId": "F9HX862255"
>>>       }
>>>     },
>>>     "dmg": {
>>>       "contents": [
>>>         {
>>>           "x": 130,
>>>           "y": 220
>>>         },
>>>         {
>>>           "x": 410,
>>>           "y": 220,
>>>           "type": "link",
>>>           "path": "/Applications"
>>>         }
>>>       ]
>>>     },
>>>     "win": {
>>>       "target": [
>>>         "nsis"
>>>       ],
>>>       "signingHashAlgorithms": [
>>>         "sha256"
>>>       ],
>>>       "sign": "./sign-windows.js"
>>>     },
>>>     "linux": {
>>>       "executableName": "byplay-desktop",
>>>       "target": [
>>>         "AppImage"
>>>       ],
>>>       "category": "Development"
>>>     },
>>>     "directories": {
>>>       "app": "release/app",
>>>       "buildResources": "assets",
>>>       "output": "release/build"
>>>     },
>>>     "extraResources": [
>>>       "./assets/**"
>>>     ],
>>>     "publish": {
>>>       "provider": "github",
>>>       "owner": "byplay-io",
>>>       "repo": "byplay-desktop"
>>>     }
>>>   },
>>>   "devEngines": {
>>>     "node": ">=14.x",
>>>     "npm": ">=7.x"
>>>   },
>>>   "electronmon": {
>>>     "patterns": [
>>>       "!**/**",
>>>       "src/main/**"
>>>     ],
>>>     "logLevel": "quiet"
>>>   }
>>> }+ rm -f package-lock.json pnpm-lock.yaml yarn.lock
+ '[' ./ '!=' ./ ']'
+ set +e
+ /twcr/worker/../worker/pm-install.sh npm /tmp/twcr-1957180e93fa /twcr/mnt/results
+ package_manager_name=npm
+ procdir=/tmp/twcr-1957180e93fa
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
++ '[' -f package-lock.json ']'
++ echo install
+ npm install --ignore-engines

added 112 packages, and audited 113 packages in 3s

28 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
npm notice 
npm notice New minor version of npm available! 10.2.4 -> 10.5.0
npm notice Changelog: <https://github.com/npm/cli/releases/tag/v10.5.0>
npm notice Run `npm install -g npm@10.5.0` to update!
npm notice 
+ npm query '*'
+ jq -cr '
        map({ name: .name, version: .version })
        | map(select(.name))
        | sort_by(.name)[]
      '
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=3.4.1
+ tailwind_config_exporter=tailwind.config.exporter2.cjs
+ '[' -f node_modules/tailwindcss/lib/lib/load-config.js ']'
+ tailwind_config_exporter=tailwind.config.exporter3.mjs
+ cp /twcr/worker/../worker/tailwind.config.exporter3.mjs ./
+ set +e
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ echo 'module.exports={plugins:['
+ jq -rs '
        map(select(.name | startswith("@tailwindcss/")))
        | map("require(" + ( .name | tojson ) + "),")[]
      '
+ grep -Ev '"@tailwindcss/postcss7-compat"'
+ true
+ echo ']}'
+ cat tailwind.config.js
+ sed 's/^/>>> /'
>>> module.exports={plugins:[
>>> ]}
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_end 2024-03-04T11:44:24Z
+ jq -nc --arg key timestamp_attempt_squash_end --arg value 2024-03-04T11:44:24Z '{ key: $key, value: $value }'
+ break
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_end 2024-03-04T11:44:24Z
+ jq -nc --arg key timestamp_end --arg value 2024-03-04T11:44:24Z '{ key: $key, value: $value }'
+ rm /twcr/mnt/results/extract-failed
+ touch /twcr/mnt/results/extract-completed
