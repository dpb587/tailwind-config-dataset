==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/kodadot/nft-gallery
+ reporef=main
+ repopath=./
+ '[' true == true ']'
+ grep -q '^././'
++ echo github.com/kodadot/nft-gallery
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-62d06928d3df
++ echo 'github.com/kodadot/nft-gallery;main;./'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/9e2b7d061937
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/kodadot/nft-gallery/bWFpbgo/Li8K
+ jq -nc --arg key analysis_key --arg value github.com/kodadot/nft-gallery/bWFpbgo/Li8K '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce 091f782d54dd6df0
+ jq -nc --arg key analysis_nonce --arg value 091f782d54dd6df0 '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/kodadot/nft-gallery
+ jq -nc --arg key input_repo_name --arg value github.com/kodadot/nft-gallery '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref main
+ jq -nc --arg key input_repo_ref --arg value main '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./
+ jq -nc --arg key input_repo_path --arg value ./ '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-05T00:29:04Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-05T00:29:04Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-62d06928d3df
/tmp/twcr-62d06928d3df /twcr
+ pushd /tmp/twcr-62d06928d3df
+ '[' -d .git ']'
+ git clone --depth=1 -b main https://github.com/kodadot/nft-gallery.git .
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-05T00:29:06Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-05T00:29:06Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha 2263126c72754f9354770c5f692189aa58d39eb9
+ jq -nc --arg key exec_repo_commit_sha --arg value 2263126c72754f9354770c5f692189aa58d39eb9 '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2024-02-29 20:05:19 +0100' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2024-02-29T19:05:19Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2024-02-29T19:05:19Z '{ key: $key, value: $value }'
/tmp/twcr-62d06928d3df /tmp/twcr-62d06928d3df /twcr
+ '[' -z ./ ']'
+ pushd ./
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ '[' -f tailwind.config.cjs ']'
+ '[' -f tailwind.config.mjs ']'
+ '[' -f tailwind.config.ts ']'
+ tailwind_config_file_name=tailwind.config.ts
+ writetaskstat exec_tailwind_config_file tailwind.config.ts
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.ts '{ key: $key, value: $value }'
+ cp tailwind.config.ts /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-62d06928d3df
+ package_manager_name=pnpm
+ '[' -z pnpm ']'
+ '[' -z pnpm ']'
+ writetaskstat exec_node_package_manager pnpm
+ jq -nc --arg key exec_node_package_manager --arg value pnpm '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-05T00:29:07Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-05T00:29:07Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.ts
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
>>> {
>>>   "homepage": "https://kodadot.xyz",
>>>   "repository": {
>>>     "type": "git",
>>>     "url": "https://github.com/npm/cli.git"
>>>   },
>>>   "bugs": {
>>>     "url": "https://github.com/kodadot/nft-gallery/issues"
>>>   },
>>>   "description": "Open Source NFT marketplace developed as public good",
>>>   "keywords": [
>>>     "nft",
>>>     "marketplace",
>>>     "open source",
>>>     "public good"
>>>   ],
>>>   "license": "MIT",
>>>   "name": "kodadot-nft-marketplace",
>>>   "version": "3.0.0",
>>>   "private": true,
>>>   "husky": {
>>>     "hooks": {
>>>       "pre-commit": "lint-staged"
>>>     }
>>>   },
>>>   "lint-staged": {
>>>     "*.{js,ts,vue}": [
>>>       "eslint --fix",
>>>       "prettier --write"
>>>     ]
>>>   },
>>>   "engines": {
>>>     "npm": "please-use-pnpm",
>>>     "pnpm": "8",
>>>     "node": "^20"
>>>   },
>>>   "prettier": {
>>>     "semi": false,
>>>     "bracketSameLine": true,
>>>     "singleQuote": true
>>>   },
>>>   "packageManager": "pnpm@8.6.0",
>>>   "dependencies": {
>>>     "@kodadot1/brick": "workspace:*"
>>>   },
>>>   "devDependencies": {
>>>     "tailwindcss": "^3.4.1"
>>>   },
>>>   "resolutions": {
>>>     "@apollo/federation": "0.38.1",
>>>     "vue": "3.4.8"
>>>   }
>>> }+ rm -f package-lock.json pnpm-lock.yaml yarn.lock
+ '[' ./ '!=' ./ ']'
+ set +e
+ /twcr/worker/../worker/pm-install.sh pnpm /tmp/twcr-62d06928d3df /twcr/mnt/results
+ package_manager_name=pnpm
+ procdir=/tmp/twcr-62d06928d3df
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ '[' '!' -f /tmp/twcr-62d06928d3df/package.json ']'
++ pnpm -v
+ sed -Ei 's/("pnpm": ")(.+)(")/\18.15.4\3/' /tmp/twcr-62d06928d3df/package.json
+ '[' '!' -f package.json ']'
++ pnpm -v
+ sed -Ei 's/("pnpm": ")(.+)(")/\18.15.4\3/' package.json
+ pnpm install
 ERR_PNPM_UNSUPPORTED_ENGINE  Unsupported environment (bad pnpm and/or Node.js version)

Your Node version is incompatible with "/tmp/twcr-62d06928d3df".

Expected version: ^20
Got: v21.6.2

This is happening because the package's manifest has an engines.node field specified.
To fix this issue, install the required Node version.
+ exitcode=1
+ set -e
+ [[ 1 != \0 ]]
+ [[ squash == \s\q\u\a\s\h ]]
+ echo '[worker] WARN: package manager failed; retrying with full install'
[worker] WARN: package manager failed; retrying with full install
+ attempt_mode=full
+ continue
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_full_begin 2024-03-05T00:29:08Z
+ jq -nc --arg key timestamp_attempt_full_begin --arg value 2024-03-05T00:29:08Z '{ key: $key, value: $value }'
+ [[ full == \s\q\u\a\s\h ]]
+ git clean -fdx
+ git reset --hard
HEAD is now at 2263126 Merge pull request #9586 from newraina/9585
+ set +e
+ /twcr/worker/../worker/pm-install.sh pnpm /tmp/twcr-62d06928d3df /twcr/mnt/results
+ package_manager_name=pnpm
+ procdir=/tmp/twcr-62d06928d3df
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ '[' '!' -f /tmp/twcr-62d06928d3df/package.json ']'
++ pnpm -v
+ sed -Ei 's/("pnpm": ")(.+)(")/\18.15.4\3/' /tmp/twcr-62d06928d3df/package.json
+ '[' '!' -f package.json ']'
++ pnpm -v
+ sed -Ei 's/("pnpm": ")(.+)(")/\18.15.4\3/' package.json
+ pnpm install
 ERR_PNPM_UNSUPPORTED_ENGINE  Unsupported environment (bad pnpm and/or Node.js version)

Your Node version is incompatible with "/tmp/twcr-62d06928d3df".

Expected version: ^20
Got: v21.6.2

This is happening because the package's manifest has an engines.node field specified.
To fix this issue, install the required Node version.
+ exitcode=1
+ set -e
+ [[ 1 != \0 ]]
+ [[ full == \s\q\u\a\s\h ]]
+ exit 1
