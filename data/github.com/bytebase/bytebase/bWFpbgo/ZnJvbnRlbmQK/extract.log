==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/bytebase/bytebase
+ reporef=main
+ repopath=./frontend
++ echo github.com/bytebase/bytebase
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-fa6aa081bbed
++ echo 'github.com/bytebase/bytebase;main;./frontend'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/4c44f8a1163a
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/bytebase/bytebase/bWFpbgo/Li9mcm9udGVuZAo
+ jq -nc --arg key analysis_key --arg value github.com/bytebase/bytebase/bWFpbgo/Li9mcm9udGVuZAo '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce 93268422b8506ff0
+ jq -nc --arg key analysis_nonce --arg value 93268422b8506ff0 '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/bytebase/bytebase
+ jq -nc --arg key input_repo_name --arg value github.com/bytebase/bytebase '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref main
+ jq -nc --arg key input_repo_ref --arg value main '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./frontend
+ jq -nc --arg key input_repo_path --arg value ./frontend '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-02T23:08:44Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-02T23:08:44Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-fa6aa081bbed
/tmp/twcr-fa6aa081bbed /twcr
+ pushd /tmp/twcr-fa6aa081bbed
+ '[' -d .git ']'
+ git clone --depth=1 -b main https://github.com/bytebase/bytebase.git .
Cloning into '.'...
Updating files:  36% (1272/3490)Updating files:  37% (1292/3490)Updating files:  38% (1327/3490)Updating files:  39% (1362/3490)Updating files:  40% (1396/3490)Updating files:  41% (1431/3490)Updating files:  42% (1466/3490)Updating files:  43% (1501/3490)Updating files:  44% (1536/3490)Updating files:  45% (1571/3490)Updating files:  46% (1606/3490)Updating files:  47% (1641/3490)Updating files:  48% (1676/3490)Updating files:  49% (1711/3490)Updating files:  50% (1745/3490)Updating files:  51% (1780/3490)Updating files:  52% (1815/3490)Updating files:  53% (1850/3490)Updating files:  54% (1885/3490)Updating files:  55% (1920/3490)Updating files:  56% (1955/3490)Updating files:  57% (1990/3490)Updating files:  58% (2025/3490)Updating files:  59% (2060/3490)Updating files:  60% (2094/3490)Updating files:  61% (2129/3490)Updating files:  62% (2164/3490)Updating files:  63% (2199/3490)Updating files:  64% (2234/3490)Updating files:  65% (2269/3490)Updating files:  66% (2304/3490)Updating files:  67% (2339/3490)Updating files:  68% (2374/3490)Updating files:  69% (2409/3490)Updating files:  70% (2443/3490)Updating files:  71% (2478/3490)Updating files:  72% (2513/3490)Updating files:  73% (2548/3490)Updating files:  74% (2583/3490)Updating files:  75% (2618/3490)Updating files:  76% (2653/3490)Updating files:  77% (2688/3490)Updating files:  78% (2723/3490)Updating files:  79% (2758/3490)Updating files:  80% (2792/3490)Updating files:  81% (2827/3490)Updating files:  82% (2862/3490)Updating files:  83% (2897/3490)Updating files:  84% (2932/3490)Updating files:  85% (2967/3490)Updating files:  86% (3002/3490)Updating files:  87% (3037/3490)Updating files:  88% (3072/3490)Updating files:  89% (3107/3490)Updating files:  90% (3141/3490)Updating files:  91% (3176/3490)Updating files:  92% (3211/3490)Updating files:  93% (3246/3490)Updating files:  94% (3281/3490)Updating files:  95% (3316/3490)Updating files:  96% (3351/3490)Updating files:  97% (3386/3490)Updating files:  98% (3421/3490)Updating files:  99% (3456/3490)Updating files: 100% (3490/3490)Updating files: 100% (3490/3490), done.
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-02T23:08:58Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-02T23:08:58Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha c3a50c062a49f165ac6fd694c7f5048845a0b369
+ jq -nc --arg key exec_repo_commit_sha --arg value c3a50c062a49f165ac6fd694c7f5048845a0b369 '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2024-03-02 17:00:24 +0800' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2024-03-02T09:00:24Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2024-03-02T09:00:24Z '{ key: $key, value: $value }'
+ '[' -z ./frontend ']'
+ pushd ./frontend
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ tailwind_config_file_name=tailwind.config.js
+ writetaskstat exec_tailwind_config_file tailwind.config.js
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.js '{ key: $key, value: $value }'
/tmp/twcr-fa6aa081bbed/frontend /tmp/twcr-fa6aa081bbed /twcr
+ cp tailwind.config.js /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
+ package_manager_name=npm
+ grep -q '"packageManager":[^"]+"pnpm@"' package.json
+ '[' -f pnpm-lock.yaml ']'
+ package_manager_name=pnpm
+ writetaskstat exec_node_package_manager pnpm
+ jq -nc --arg key exec_node_package_manager --arg value pnpm '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-02T23:08:58Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-02T23:08:58Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
>>> {
>>>   "name": "bytebase",
>>>   "license": "SEE LICENSE IN LICENSE",
>>>   "dependencies": {},
>>>   "devDependencies": {
>>>     "@tailwindcss/forms": "0.5.7",
>>>     "@tailwindcss/typography": "0.5.10",
>>>     "tailwindcss": "3.3.6"
>>>   },
>>>   "peerDependencies": {}
>>> }+ set +e
+ /twcr/worker/../worker/pm-install.sh pnpm /tmp/twcr-fa6aa081bbed /twcr/mnt/results
+ package_manager_name=pnpm
+ procdir=/tmp/twcr-fa6aa081bbed
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ '[' '!' -f /tmp/twcr-fa6aa081bbed/package.json ']'
+ '[' '!' -f package.json ']'
++ pnpm -v
+ sed -Ei 's/("pnpm": ")(.+)(")/\18.15.4\3/' package.json
+ pnpm install
Progress: resolved 0, reused 0, downloaded 1, added 0
Progress: resolved 29, reused 0, downloaded 29, added 0
Progress: resolved 81, reused 0, downloaded 80, added 0
Packages: +89
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Progress: resolved 90, reused 0, downloaded 89, added 89, done

devDependencies:
+ @tailwindcss/forms 0.5.7
+ @tailwindcss/typography 0.5.10
+ tailwindcss 3.3.6

Done in 3.3s
+ pnpm ls --json
+ jq -cr '
        .[]
        | [.dependencies, .devDependencies, .optionalDependencies]
        | map(select(.))[]
        | to_entries
        | map({ name: .key, version: .value.version })
        | sort_by(.name)[]
      '
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=3.3.6
+ tailwind_config_exporter=tailwind.config.exporter3.mjs
+ true
+ cp /twcr/worker/../worker/tailwind.config.exporter3.mjs ./
+ set +e
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ break
+ echo 'module.exports={plugins:['
+ jq -rs '
        map(select(.name | startswith("@tailwindcss/")))
        | map("require(" + ( .name | tojson ) + "),")[]
      '
+ echo ']}'
+ cat tailwind.config.js
+ sed 's/^/>>> /'
>>> module.exports={plugins:[
>>> require("@tailwindcss/forms"),
>>> require("@tailwindcss/typography"),
>>> ]}
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_end 2024-03-02T23:09:03Z
+ jq -nc --arg key timestamp_attempt_squash_end --arg value 2024-03-02T23:09:03Z '{ key: $key, value: $value }'
+ break
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_end 2024-03-02T23:09:03Z
+ jq -nc --arg key timestamp_end --arg value 2024-03-02T23:09:03Z '{ key: $key, value: $value }'
+ rm /twcr/mnt/results/extract-failed
+ touch /twcr/mnt/results/extract-completed
