==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/stablecoins-wtf/stablecoins.wtf
+ reporef=main
+ repopath=./packages/frontend
+ '[' true == true ']'
+ grep -q '^././'
++ echo github.com/stablecoins-wtf/stablecoins.wtf
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-00500e245b6c
++ echo 'github.com/stablecoins-wtf/stablecoins.wtf;main;./packages/frontend'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/a10c82077839
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/stablecoins-wtf/stablecoins.wtf/bWFpbgo/Li9wYWNrYWdlcy9mcm9udGVuZAo
+ jq -nc --arg key analysis_key --arg value github.com/stablecoins-wtf/stablecoins.wtf/bWFpbgo/Li9wYWNrYWdlcy9mcm9udGVuZAo '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce e69440ebd5db81e5
+ jq -nc --arg key analysis_nonce --arg value e69440ebd5db81e5 '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/stablecoins-wtf/stablecoins.wtf
+ jq -nc --arg key input_repo_name --arg value github.com/stablecoins-wtf/stablecoins.wtf '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref main
+ jq -nc --arg key input_repo_ref --arg value main '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./packages/frontend
+ jq -nc --arg key input_repo_path --arg value ./packages/frontend '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-05T05:14:25Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-05T05:14:25Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-00500e245b6c
+ pushd /tmp/twcr-00500e245b6c
+ '[' -d .git ']'
+ git clone --depth=1 -b main https://github.com/stablecoins-wtf/stablecoins.wtf.git .
/tmp/twcr-00500e245b6c /twcr
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-05T05:14:26Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-05T05:14:26Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha be26213ff23a2aeb43b3c5597ec0b08bef8344f0
+ jq -nc --arg key exec_repo_commit_sha --arg value be26213ff23a2aeb43b3c5597ec0b08bef8344f0 '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2022-11-09 22:20:20 +0100' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2022-11-09T21:20:20Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2022-11-09T21:20:20Z '{ key: $key, value: $value }'
+ '[' -z ./packages/frontend ']'
+ pushd ./packages/frontend
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ tailwind_config_file_name=tailwind.config.js
+ writetaskstat exec_tailwind_config_file tailwind.config.js
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.js '{ key: $key, value: $value }'
/tmp/twcr-00500e245b6c/packages/frontend /tmp/twcr-00500e245b6c /twcr
+ cp tailwind.config.js /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-00500e245b6c/packages/frontend
+ package_manager_name=
+ '[' -z '' ']'
+ '[' ./packages/frontend '!=' ./ ']'
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-00500e245b6c
+ package_manager_name=pnpm
+ '[' -z pnpm ']'
+ writetaskstat exec_node_package_manager pnpm
+ jq -nc --arg key exec_node_package_manager --arg value pnpm '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-05T05:14:26Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-05T05:14:26Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.js
[squash-package] ERROR: failed to find any match for import path (@tailwindcss/aspect-ratio)
+ exitcode=1
+ set -e
+ [[ 1 != \0 ]]
+ echo '[worker] WARN: squash failed; retrying with full install'
[worker] WARN: squash failed; retrying with full install
+ attempt_mode=full
+ continue
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_full_begin 2024-03-05T05:14:26Z
+ jq -nc --arg key timestamp_attempt_full_begin --arg value 2024-03-05T05:14:26Z '{ key: $key, value: $value }'
+ [[ full == \s\q\u\a\s\h ]]
+ git clean -fdx
+ git reset --hard
HEAD is now at be26213 integrate vercel analytics
+ set +e
+ /twcr/worker/../worker/pm-install.sh pnpm /tmp/twcr-00500e245b6c /twcr/mnt/results
+ package_manager_name=pnpm
+ procdir=/tmp/twcr-00500e245b6c
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ '[' '!' -f /tmp/twcr-00500e245b6c/package.json ']'
++ pnpm -v
+ sed -Ei 's/("pnpm": ")(.+)(")/\18.15.4\3/' /tmp/twcr-00500e245b6c/package.json
+ '[' '!' -f package.json ']'
++ pnpm -v
+ sed -Ei 's/("pnpm": ")(.+)(")/\18.15.4\3/' package.json
+ pnpm install
Scope: all 2 workspace projects
../..                                    | Progress: resolved 0, reused 0, downloaded 1, added 0
../..                                    | Progress: resolved 35, reused 0, downloaded 35, added 0
../..                                    | Progress: resolved 57, reused 0, downloaded 57, added 0
../..                                    | Progress: resolved 57, reused 0, downloaded 58, added 0
../..                                    | Progress: resolved 65, reused 0, downloaded 60, added 0
../..                                    | Progress: resolved 105, reused 0, downloaded 92, added 0
../..                                    | Progress: resolved 169, reused 0, downloaded 156, added 0
../..                                    | Progress: resolved 228, reused 0, downloaded 215, added 0
../..                                    | Progress: resolved 283, reused 0, downloaded 270, added 0
../..                                    | Progress: resolved 334, reused 0, downloaded 321, added 0
../..                                    | Progress: resolved 364, reused 0, downloaded 351, added 0
../..                                    | Progress: resolved 427, reused 0, downloaded 414, added 0
../..                                    | Progress: resolved 485, reused 0, downloaded 472, added 0
../..                                    | Progress: resolved 548, reused 0, downloaded 535, added 0
../..                                    | Progress: resolved 608, reused 0, downloaded 596, added 0
../..                                    | Progress: resolved 677, reused 0, downloaded 665, added 0
../..                                    | Progress: resolved 696, reused 0, downloaded 675, added 0
../..                                    | Progress: resolved 720, reused 0, downloaded 702, added 0
../..                                    | +715 ++++++++++++++++++++++++++++++++
../..                                    | Progress: resolved 727, reused 0, downloaded 715, added 714
../..                                    | Progress: resolved 727, reused 0, downloaded 715, added 715, done
.../node_modules/core-js-pure postinstall$ node -e "try{require('./postinstall')}catch(e){}"
.../sharp@0.31.2/node_modules/sharp install$ (node install/libvips && node install/dll-copy && prebuild-install) || (node install/can-compile && node-gyp rebuild && node install/dll-copy)
.../node_modules/core-js-pure postinstall: Thank you for using core-js ( https://github.com/zloirock/core-js ) for polyfilling JavaScript standard library!
.../node_modules/core-js-pure postinstall: The project needs your help! Please consider supporting of core-js:
.../node_modules/core-js-pure postinstall: > https://opencollective.com/core-js 
.../node_modules/core-js-pure postinstall: > https://patreon.com/zloirock 
.../node_modules/core-js-pure postinstall: > bitcoin: bc1qlea7544qtsmj2rayg0lthvza9fau63ux0fstcz 
.../node_modules/core-js-pure postinstall: Also, the author of core-js ( https://github.com/zloirock ) is looking for a good job -)
.../node_modules/core-js-pure postinstall: Done
.../sharp@0.31.2/node_modules/sharp install: sharp: Downloading https://github.com/lovell/sharp-libvips/releases/download/v8.13.3/libvips-8.13.3-linux-x64.tar.br
.../sharp@0.31.2/node_modules/sharp install: sharp: Integrity check passed for linux-x64
.../sharp@0.31.2/node_modules/sharp install: Done
../.. prepare$ husky install
../.. prepare: husky - Git hooks installed
../.. prepare: Done

dependencies:
+ @apollo/client 3.7.1
+ @emotion/css 11.10.5
+ @emotion/react 11.10.5
+ @emotion/server 11.10.0
+ @emotion/styled 11.10.5
+ @graphcms/rich-text-react-renderer 0.6.1
+ @headlessui/react 1.7.4
+ @tippyjs/react 4.2.6
+ @vercel/analytics 0.1.4
+ axios 1.1.3
+ dayjs 1.11.6
+ graphql 16.6.0
+ graphql-request 5.0.0
+ next 13.0.2
+ next-seo 5.14.1
+ nprogress 0.2.0
+ react 18.2.0
+ react-cookie 4.1.1
+ react-dom 18.2.0
+ react-favicon 1.0.1
+ react-hot-toast 2.4.0
+ react-icons 4.6.0
+ react-number-format 5.1.1
+ react-query 3.39.2
+ react-twitter-widgets 1.11.0
+ recharts 2.1.12
+ sharp 0.31.2
+ slugify 1.6.5
+ use-async-effect 2.2.7
+ usehooks-ts 2.9.1

devDependencies:
+ @babel/core 7.20.2
+ @babel/preset-react 7.18.6
+ @babel/preset-typescript 7.18.6
+ @emotion/babel-plugin 11.10.5
+ @graphcms/rich-text-types 0.5.0
+ @next/bundle-analyzer 13.0.2
+ @tailwindcss/typography 0.5.8
+ @types/fs-extra 9.0.13
+ @types/node 16.18.3
+ @types/nprogress 0.2.0
+ @types/react 18.0.25
+ @typescript-eslint/eslint-plugin 5.42.1
+ @typescript-eslint/parser 5.42.1
+ autoprefixer 10.4.13
+ babel-jest 29.3.1
+ babel-loader 9.1.0
+ babel-plugin-macros 3.1.0
+ eslint 8.27.0
+ eslint-config-next 13.0.2
+ eslint-config-prettier 8.5.0
+ eslint-plugin-react 7.31.10
+ next-sitemap 3.1.30
+ prettier 2.7.1
+ tailwindcss 3.2.2
+ ts-node 10.9.1
+ twin.macro 3.0.0
+ typescript 4.8.4

Done in 23.4s
+ pnpm ls --json
+ jq -cr '
        .[]
        | [.dependencies, .devDependencies, .optionalDependencies]
        | map(select(.))[]
        | to_entries
        | map({ name: .key, version: .value.version })
        | sort_by(.name)[]
      '
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=3.2.2
+ tailwind_config_exporter=tailwind.config.exporter2.cjs
+ '[' -f node_modules/tailwindcss/lib/lib/load-config.js ']'
+ cp /twcr/worker/../worker/tailwind.config.exporter2.cjs ./
+ set +e
+ node ./tailwind.config.exporter2.cjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ echo 'module.exports={plugins:['
+ jq -rs '
        map(select(.name | startswith("@tailwindcss/")))
        | map("require(" + ( .name | tojson ) + "),")[]
      '
+ grep -Ev '"@tailwindcss/postcss7-compat"'
+ echo ']}'
+ cat tailwind.config.js
+ sed 's/^/>>> /'
>>> module.exports={plugins:[
>>> require("@tailwindcss/typography"),
>>> ]}
+ node ./tailwind.config.exporter2.cjs tailwind.config.js
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_full_end 2024-03-05T05:14:51Z
+ jq -nc --arg key timestamp_attempt_full_end --arg value 2024-03-05T05:14:51Z '{ key: $key, value: $value }'
+ break
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_end 2024-03-05T05:14:51Z
+ jq -nc --arg key timestamp_end --arg value 2024-03-05T05:14:51Z '{ key: $key, value: $value }'
+ rm /twcr/mnt/results/extract-failed
+ touch /twcr/mnt/results/extract-completed
