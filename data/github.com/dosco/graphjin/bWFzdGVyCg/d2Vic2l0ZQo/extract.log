==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/dosco/graphjin
+ reporef=master
+ repopath=./website
+ '[' true == true ']'
+ grep -q '^././'
++ echo github.com/dosco/graphjin
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-74b2a27bb380
++ echo 'github.com/dosco/graphjin;master;./website'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/61a174d6ea30
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/dosco/graphjin/bWFzdGVyCg/Li93ZWJzaXRlCg
+ jq -nc --arg key analysis_key --arg value github.com/dosco/graphjin/bWFzdGVyCg/Li93ZWJzaXRlCg '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce a0ba3c55ada8058b
+ jq -nc --arg key analysis_nonce --arg value a0ba3c55ada8058b '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/dosco/graphjin
+ jq -nc --arg key input_repo_name --arg value github.com/dosco/graphjin '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref master
+ jq -nc --arg key input_repo_ref --arg value master '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./website
+ jq -nc --arg key input_repo_path --arg value ./website '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-04T22:23:24Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-04T22:23:24Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-74b2a27bb380
+ pushd /tmp/twcr-74b2a27bb380
+ '[' -d .git ']'
+ git clone --depth=1 -b master https://github.com/dosco/graphjin.git .
/tmp/twcr-74b2a27bb380 /twcr
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-04T22:23:27Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-04T22:23:27Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha 91d9d01a55dc7f2c05ce6c820eed332719387764
+ jq -nc --arg key exec_repo_commit_sha --arg value 91d9d01a55dc7f2c05ce6c820eed332719387764 '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2023-12-14 15:08:54 -0800' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2023-12-14T23:08:54Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2023-12-14T23:08:54Z '{ key: $key, value: $value }'
+ '[' -z ./website ']'
+ pushd ./website
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ tailwind_config_file_name=tailwind.config.js
+ writetaskstat exec_tailwind_config_file tailwind.config.js
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.js '{ key: $key, value: $value }'
/tmp/twcr-74b2a27bb380/website /tmp/twcr-74b2a27bb380 /twcr
+ cp tailwind.config.js /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-74b2a27bb380/website
+ package_manager_name=
+ '[' -z '' ']'
+ '[' ./website '!=' ./ ']'
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-74b2a27bb380
+ package_manager_name=
+ '[' -z '' ']'
+ package_manager_name=npm
+ writetaskstat exec_node_package_manager npm
+ jq -nc --arg key exec_node_package_manager --arg value npm '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-04T22:23:27Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-04T22:23:27Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
>>> {
>>>   "name": "idm",
>>>   "version": "0.1.0",
>>>   "private": true,
>>>   "dependencies": {},
>>>   "devDependencies": {
>>>     "@tailwindcss/typography": "^0.5.8",
>>>     "tailwindcss": "^3.2.1"
>>>   }
>>> }+ rm -f package-lock.json pnpm-lock.yaml yarn.lock
+ '[' ./website '!=' ./ ']'
+ rm -f /tmp/twcr-74b2a27bb380/package.json /tmp/twcr-74b2a27bb380/package-lock.json /tmp/twcr-74b2a27bb380/pnpm-lock.yaml /tmp/twcr-74b2a27bb380/yarn.lock
+ set +e
+ /twcr/worker/../worker/pm-install.sh npm /tmp/twcr-74b2a27bb380 /twcr/mnt/results
+ package_manager_name=npm
+ procdir=/tmp/twcr-74b2a27bb380
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
++ '[' -f package-lock.json ']'
++ echo install
+ npm install --ignore-engines

added 118 packages, and audited 119 packages in 6s

28 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
npm notice 
npm notice New minor version of npm available! 10.2.4 -> 10.5.0
npm notice Changelog: <https://github.com/npm/cli/releases/tag/v10.5.0>
npm notice Run `npm install -g npm@10.5.0` to update!
npm notice 
+ npm query '*'
+ jq -cr '
        map({ name: .name, version: .version })
        | map(select(.name))
        | sort_by(.name)[]
      '
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=3.4.1
+ tailwind_config_exporter=tailwind.config.exporter2.cjs
+ '[' -f node_modules/tailwindcss/lib/lib/load-config.js ']'
+ tailwind_config_exporter=tailwind.config.exporter3.mjs
+ cp /twcr/worker/../worker/tailwind.config.exporter3.mjs ./
+ set +e
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ echo 'module.exports={plugins:['
+ jq -rs '
        map(select(.name | startswith("@tailwindcss/")))
        | map("require(" + ( .name | tojson ) + "),")[]
      '
+ grep -Ev '"@tailwindcss/postcss7-compat"'
+ echo ']}'
+ cat tailwind.config.js
+ sed 's/^/>>> /'
>>> module.exports={plugins:[
>>> require("@tailwindcss/typography"),
>>> ]}
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_end 2024-03-04T22:23:34Z
+ jq -nc --arg key timestamp_attempt_squash_end --arg value 2024-03-04T22:23:34Z '{ key: $key, value: $value }'
+ break
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_end 2024-03-04T22:23:34Z
+ jq -nc --arg key timestamp_end --arg value 2024-03-04T22:23:34Z '{ key: $key, value: $value }'
+ rm /twcr/mnt/results/extract-failed
+ touch /twcr/mnt/results/extract-completed
