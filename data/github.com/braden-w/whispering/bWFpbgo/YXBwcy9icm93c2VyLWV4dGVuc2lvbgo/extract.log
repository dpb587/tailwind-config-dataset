==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/braden-w/whispering
+ reporef=main
+ repopath=./apps/browser-extension
+ '[' true == true ']'
+ grep -q '^././'
++ echo github.com/braden-w/whispering
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-603e77ba4690
++ echo 'github.com/braden-w/whispering;main;./apps/browser-extension'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/09d9d0fffeb1
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/braden-w/whispering/bWFpbgo/Li9hcHBzL2Jyb3dzZXItZXh0ZW5zaW9uCg
+ jq -nc --arg key analysis_key --arg value github.com/braden-w/whispering/bWFpbgo/Li9hcHBzL2Jyb3dzZXItZXh0ZW5zaW9uCg '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce 3f4d010f99905c94
+ jq -nc --arg key analysis_nonce --arg value 3f4d010f99905c94 '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/braden-w/whispering
+ jq -nc --arg key input_repo_name --arg value github.com/braden-w/whispering '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref main
+ jq -nc --arg key input_repo_ref --arg value main '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./apps/browser-extension
+ jq -nc --arg key input_repo_path --arg value ./apps/browser-extension '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-04T07:50:42Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-04T07:50:42Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-603e77ba4690
/tmp/twcr-603e77ba4690 /twcr
+ pushd /tmp/twcr-603e77ba4690
+ '[' -d .git ']'
+ git clone --depth=1 -b main https://github.com/braden-w/whispering.git .
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-04T07:50:45Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-04T07:50:45Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha 706901f76b63acbf3ffae2be887e5d2a83dcb725
+ jq -nc --arg key exec_repo_commit_sha --arg value 706901f76b63acbf3ffae2be887e5d2a83dcb725 '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2023-11-30 15:07:43 -0500' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2023-11-30T20:07:43Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2023-11-30T20:07:43Z '{ key: $key, value: $value }'
+ '[' -z ./apps/browser-extension ']'
+ pushd ./apps/browser-extension
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ tailwind_config_file_name=tailwind.config.js
+ writetaskstat exec_tailwind_config_file tailwind.config.js
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.js '{ key: $key, value: $value }'
/tmp/twcr-603e77ba4690/apps/browser-extension /tmp/twcr-603e77ba4690 /twcr
+ cp tailwind.config.js /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-603e77ba4690/apps/browser-extension
+ package_manager_name=pnpm
+ '[' -z pnpm ']'
+ '[' -z pnpm ']'
+ writetaskstat exec_node_package_manager pnpm
+ jq -nc --arg key exec_node_package_manager --arg value pnpm '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-04T07:50:45Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-04T07:50:45Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
>>> {
>>>   "name": "whispering",
>>>   "displayName": "Whispering",
>>>   "version": "3.4.1",
>>>   "description": "Seamlessly integrate voice-to-text transcriptions on ChatGPT and anywhere on the webâ€”powered by OpenAI's Whisper API.",
>>>   "author": "Braden Wong",
>>>   "packageManager": "pnpm@7.5.0",
>>>   "dependencies": {},
>>>   "devDependencies": {
>>>     "tailwind-config": "workspace:*",
>>>     "tailwindcss": "^3.3.2"
>>>   },
>>>   "manifest": {
>>>     "host_permissions": [
>>>       "https://*/*"
>>>     ],
>>>     "permissions": [
>>>       "clipboardWrite"
>>>     ],
>>>     "commands": {
>>>       "toggle-recording": {
>>>         "suggested_key": {
>>>           "default": "Ctrl+Shift+X",
>>>           "mac": "Command+Shift+X"
>>>         },
>>>         "description": "Toggle recording"
>>>       }
>>>     }
>>>   }
>>> }+ rm -f package-lock.json pnpm-lock.yaml yarn.lock
+ '[' ./apps/browser-extension '!=' ./ ']'
+ rm -f /tmp/twcr-603e77ba4690/package.json /tmp/twcr-603e77ba4690/package-lock.json /tmp/twcr-603e77ba4690/pnpm-lock.yaml /tmp/twcr-603e77ba4690/yarn.lock
+ set +e
+ /twcr/worker/../worker/pm-install.sh pnpm /tmp/twcr-603e77ba4690 /twcr/mnt/results
+ package_manager_name=pnpm
+ procdir=/tmp/twcr-603e77ba4690
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ '[' '!' -f /tmp/twcr-603e77ba4690/package.json ']'
+ '[' '!' -f package.json ']'
++ pnpm -v
+ sed -Ei 's/("pnpm": ")(.+)(")/\18.15.4\3/' package.json
+ pnpm install
Scope: all 5 workspace projects
../..                                    | Progress: resolved 1, reused 0, downloaded 0, added 0
../..                                    | Progress: resolved 20, reused 0, downloaded 16, added 0
../..                                    | Progress: resolved 50, reused 0, downloaded 40, added 0
../..                                    | Progress: resolved 79, reused 0, downloaded 68, added 0
../..                                    | Progress: resolved 118, reused 0, downloaded 89, added 0
../..                                    | Progress: resolved 140, reused 0, downloaded 115, added 0
../..                                    | Progress: resolved 173, reused 0, downloaded 150, added 0
../..                                    | Progress: resolved 218, reused 0, downloaded 168, added 0
../..                                    | Progress: resolved 254, reused 0, downloaded 207, added 0
../..                                    | Progress: resolved 275, reused 0, downloaded 240, added 0
../..                                    | Progress: resolved 314, reused 0, downloaded 276, added 0
../..                                    | +290 +++++++++++++++++++++++++++++
../..                                    | Progress: resolved 320, reused 0, downloaded 290, added 290, done
.../node_modules/svelte-preprocess postinstall$ echo "[svelte-preprocess] Don't forget to install the preprocessors packages that will be used: sass, stylus, less, postcss & postcss-load-config, coffeescript, pug, etc..."
.../node_modules/svelte-preprocess postinstall: [svelte-preprocess] Don't forget to install the preprocessors packages that will be used: sass, stylus, less, postcss & postcss-load-config, coffeescript, pug, etc...
.../node_modules/svelte-preprocess postinstall: Done
.../esbuild@0.18.20/node_modules/esbuild postinstall$ node install.js
.../esbuild@0.18.20/node_modules/esbuild postinstall: Done
.../node_modules/@sveltejs/kit postinstall$ node postinstall.js
.../node_modules/@sveltejs/kit postinstall: Done

devDependencies:
+ tailwind-config 0.0.0 <- ../../packages/tailwind-config
+ tailwindcss 3.4.1

Done in 13s
+ pnpm ls --json
+ jq -cr '
        .[]
        | [.dependencies, .devDependencies, .optionalDependencies]
        | map(select(.))[]
        | to_entries
        | map({ name: .key, version: .value.version })
        | sort_by(.name)[]
      '
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=3.4.1
+ tailwind_config_exporter=tailwind.config.exporter2.cjs
+ '[' -f node_modules/tailwindcss/lib/lib/load-config.js ']'
+ tailwind_config_exporter=tailwind.config.exporter3.mjs
+ cp /twcr/worker/../worker/tailwind.config.exporter3.mjs ./
+ set +e
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ echo 'module.exports={plugins:['
+ jq -rs '
        map(select(.name | startswith("@tailwindcss/")))
        | map("require(" + ( .name | tojson ) + "),")[]
      '
+ grep -Ev '"@tailwindcss/postcss7-compat"'
+ true
+ echo ']}'
+ cat tailwind.config.js
+ sed 's/^/>>> /'
>>> module.exports={plugins:[
>>> ]}
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_end 2024-03-04T07:50:59Z
+ jq -nc --arg key timestamp_attempt_squash_end --arg value 2024-03-04T07:50:59Z '{ key: $key, value: $value }'
+ break
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_end 2024-03-04T07:50:59Z
+ jq -nc --arg key timestamp_end --arg value 2024-03-04T07:50:59Z '{ key: $key, value: $value }'
+ rm /twcr/mnt/results/extract-failed
+ touch /twcr/mnt/results/extract-completed
