==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/superwf/mobx-value
+ reporef=master
+ repopath=./
+ '[' true == true ']'
+ grep -q '^././'
++ echo github.com/superwf/mobx-value
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-96b5605bb75c
++ echo 'github.com/superwf/mobx-value;master;./'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/6c81918e72f4
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/superwf/mobx-value/bWFzdGVyCg/Li8K
+ jq -nc --arg key analysis_key --arg value github.com/superwf/mobx-value/bWFzdGVyCg/Li8K '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce 680fc04e2bc7ea94
+ jq -nc --arg key analysis_nonce --arg value 680fc04e2bc7ea94 '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/superwf/mobx-value
+ jq -nc --arg key input_repo_name --arg value github.com/superwf/mobx-value '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref master
+ jq -nc --arg key input_repo_ref --arg value master '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./
+ jq -nc --arg key input_repo_path --arg value ./ '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-05T09:23:18Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-05T09:23:18Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-96b5605bb75c
+ pushd /tmp/twcr-96b5605bb75c
+ '[' -d .git ']'
+ git clone --depth=1 -b master https://github.com/superwf/mobx-value.git .
/tmp/twcr-96b5605bb75c /twcr
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-05T09:23:19Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-05T09:23:19Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha e848bf66c518967f06b84833b1ea1b5396240a59
+ jq -nc --arg key exec_repo_commit_sha --arg value e848bf66c518967f06b84833b1ea1b5396240a59 '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2023-10-24 17:58:25 +0800' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2023-10-24T09:58:25Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2023-10-24T09:58:25Z '{ key: $key, value: $value }'
/tmp/twcr-96b5605bb75c /tmp/twcr-96b5605bb75c /twcr
+ '[' -z ./ ']'
+ pushd ./
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ tailwind_config_file_name=tailwind.config.js
+ writetaskstat exec_tailwind_config_file tailwind.config.js
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.js '{ key: $key, value: $value }'
+ cp tailwind.config.js /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-96b5605bb75c
+ package_manager_name=yarn
+ '[' -z yarn ']'
+ '[' -z yarn ']'
+ writetaskstat exec_node_package_manager yarn
+ jq -nc --arg key exec_node_package_manager --arg value yarn '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-05T09:23:19Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-05T09:23:19Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
>>> {
>>>   "name": "mobx-value",
>>>   "version": "1.8.1",
>>>   "license": "MIT",
>>>   "author": "superwf@gmail.com",
>>>   "repository": {
>>>     "type": "git",
>>>     "url": "http://github.com/superwf/mobx-value"
>>>   },
>>>   "source": "src/index.ts",
>>>   "files": [
>>>     "module",
>>>     "dist",
>>>     "lib",
>>>     "src",
>>>     "type"
>>>   ],
>>>   "keywords": [
>>>     "mobx",
>>>     "mobservable",
>>>     "observable",
>>>     "data flow",
>>>     "state management",
>>>     "data management",
>>>     "redux",
>>>     "request",
>>>     "model",
>>>     "react",
>>>     "reactjs"
>>>   ],
>>>   "sideeffects": false,
>>>   "main": "lib/index.js",
>>>   "types": "type/index.d.ts",
>>>   "typings": "type/index.d.ts",
>>>   "module": "module/index.js",
>>>   "unpkg": "dist/index.js",
>>>   "umd:main": "dist/index.js",
>>>   "jsdelivr": "dist/index.js",
>>>   "devDependencies": {
>>>     "tailwindcss": "^3.0.24"
>>>   },
>>>   "publishConfig": {
>>>     "registry": "https://registry.npmjs.org"
>>>   },
>>>   "dependencies": {}
>>> }+ rm -f package-lock.json pnpm-lock.yaml yarn.lock
+ '[' ./ '!=' ./ ']'
+ set +e
+ /twcr/worker/../worker/pm-install.sh yarn /tmp/twcr-96b5605bb75c /twcr/mnt/results
+ package_manager_name=yarn
+ procdir=/tmp/twcr-96b5605bb75c
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ '[' -z http://tid_c4c0a05dfed8:ok@172.18.0.2:3128 ']'
+ yarn config set httpProxy http://tid_c4c0a05dfed8:ok@172.18.0.2:3128
yarn config v1.22.19
success Set "httpProxy" to "http://tid_c4c0a05dfed8:ok@172.18.0.2:3128".
Done in 0.05s.
+ '[' -z http://tid_c4c0a05dfed8:ok@172.18.0.2:3128 ']'
+ yarn config set httpsProxy http://tid_c4c0a05dfed8:ok@172.18.0.2:3128
yarn config v1.22.19
success Set "httpsProxy" to "http://tid_c4c0a05dfed8:ok@172.18.0.2:3128".
Done in 0.05s.
+ yarn install
yarn install v1.22.19
info No lockfile found.
[1/4] Resolving packages...
(node:131) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
[2/4] Fetching packages...
[3/4] Linking dependencies...
[4/4] Building fresh packages...
success Saved lockfile.
Done in 7.68s.
+ yarn list --depth=0 --json --non-interactive --no-progress
+ jq -cr '
        [.. | .name?]
        | map(select(.))
        | map(capture("^(?<name>@?[^@]+)@(?<version>.+)$"))
        | sort_by(.name)[]'
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=3.4.1
+ tailwind_config_exporter=tailwind.config.exporter2.cjs
+ '[' -f node_modules/tailwindcss/lib/lib/load-config.js ']'
+ tailwind_config_exporter=tailwind.config.exporter3.mjs
+ cp /twcr/worker/../worker/tailwind.config.exporter3.mjs ./
+ set +e
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ echo 'module.exports={plugins:['
+ jq -rs '
        map(select(.name | startswith("@tailwindcss/")))
        | map("require(" + ( .name | tojson ) + "),")[]
      '
+ grep -Ev '"@tailwindcss/postcss7-compat"'
+ true
+ echo ']}'
+ cat tailwind.config.js
+ sed 's/^/>>> /'
>>> module.exports={plugins:[
>>> ]}
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_end 2024-03-05T09:23:29Z
+ jq -nc --arg key timestamp_attempt_squash_end --arg value 2024-03-05T09:23:29Z '{ key: $key, value: $value }'
+ break
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_end 2024-03-05T09:23:29Z
+ jq -nc --arg key timestamp_end --arg value 2024-03-05T09:23:29Z '{ key: $key, value: $value }'
+ rm /twcr/mnt/results/extract-failed
+ touch /twcr/mnt/results/extract-completed
