==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/StaticMania/keep-react
+ reporef=main
+ repopath=./
+ '[' true == true ']'
+ grep -q '^././'
++ echo github.com/StaticMania/keep-react
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-451d853b8014
++ echo 'github.com/StaticMania/keep-react;main;./'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/8556880f39c6
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/StaticMania/keep-react/bWFpbgo/Li8K
+ jq -nc --arg key analysis_key --arg value github.com/StaticMania/keep-react/bWFpbgo/Li8K '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce e103b6963a2682d5
+ jq -nc --arg key analysis_nonce --arg value e103b6963a2682d5 '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/StaticMania/keep-react
+ jq -nc --arg key input_repo_name --arg value github.com/StaticMania/keep-react '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref main
+ jq -nc --arg key input_repo_ref --arg value main '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./
+ jq -nc --arg key input_repo_path --arg value ./ '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-04T03:15:21Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-04T03:15:21Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-451d853b8014
+ pushd /tmp/twcr-451d853b8014
+ '[' -d .git ']'
/tmp/twcr-451d853b8014 /twcr
+ git clone --depth=1 -b main https://github.com/StaticMania/keep-react.git .
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-04T03:15:22Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-04T03:15:22Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha 4c3428a53915d24ef0500b9d5cb04d430ef19c91
+ jq -nc --arg key exec_repo_commit_sha --arg value 4c3428a53915d24ef0500b9d5cb04d430ef19c91 '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2024-02-20 21:46:43 +0600' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2024-02-20T15:46:43Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2024-02-20T15:46:43Z '{ key: $key, value: $value }'
/tmp/twcr-451d853b8014 /tmp/twcr-451d853b8014 /twcr
+ '[' -z ./ ']'
+ pushd ./
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ '[' -f tailwind.config.cjs ']'
+ '[' -f tailwind.config.mjs ']'
+ '[' -f tailwind.config.ts ']'
+ tailwind_config_file_name=tailwind.config.ts
+ writetaskstat exec_tailwind_config_file tailwind.config.ts
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.ts '{ key: $key, value: $value }'
+ cp tailwind.config.ts /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-451d853b8014
+ package_manager_name=yarn
+ '[' -z yarn ']'
+ '[' -z yarn ']'
+ writetaskstat exec_node_package_manager yarn
+ jq -nc --arg key exec_node_package_manager --arg value yarn '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-04T03:15:22Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-04T03:15:22Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.ts
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
>>> {
>>>   "name": "keep-react",
>>>   "version": "1.1.2",
>>>   "description": "Official React components built for React and Tailwind CSS",
>>>   "license": "MIT",
>>>   "keywords": [
>>>     "design-system",
>>>     "keep-design-system",
>>>     "keep-react",
>>>     "react",
>>>     "tailwind",
>>>     "tailwindcss",
>>>     "tailwind-css"
>>>   ],
>>>   "homepage": "https://react.keepdesign.io/",
>>>   "bugs": "https://github.com/StaticMania/keep-react/issues",
>>>   "files": [
>>>     "./lib/"
>>>   ],
>>>   "main": "./lib/cjs/index.js",
>>>   "module": "./lib/esm/index.js",
>>>   "types": "./lib/esm/index.d.ts",
>>>   "exports": {
>>>     ".": {
>>>       "import": {
>>>         "types": "./lib/esm/index.d.ts",
>>>         "default": "./lib/esm/index.js"
>>>       },
>>>       "require": {
>>>         "default": "./lib/cjs/index.js"
>>>       }
>>>     },
>>>     "./preset": {
>>>       "default": "./lib/cjs/theme/keep-preset.js"
>>>     },
>>>     "./css": {
>>>       "default": "./lib/cjs/theme/main.min.css"
>>>     }
>>>   },
>>>   "repository": {
>>>     "type": "git",
>>>     "url": "https://github.com/StaticMania/keep-react"
>>>   },
>>>   "dependencies": {
>>>     "tailwindcss": "^3.4.0"
>>>   },
>>>   "devDependencies": {},
>>>   "husky": {
>>>     "hooks": {
>>>       "pre-commit": "lint-staged",
>>>       "pre-push": "npm run lint && npm run format"
>>>     }
>>>   },
>>>   "lint-staged": {
>>>     "app/**/*.{ts,tsx,js,jsx}": [
>>>       "npm run lint",
>>>       "npm run format"
>>>     ]
>>>   },
>>>   "resolutions": {
>>>     "string-width": "4.2.2",
>>>     "strip-ansi": "6.0.1",
>>>     "wrap-ansi": "7.0.0"
>>>   }
>>> }+ rm -f package-lock.json pnpm-lock.yaml yarn.lock
+ '[' ./ '!=' ./ ']'
+ set +e
+ /twcr/worker/../worker/pm-install.sh yarn /tmp/twcr-451d853b8014 /twcr/mnt/results
+ package_manager_name=yarn
+ procdir=/tmp/twcr-451d853b8014
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ '[' -z http://tid_4beeda688b2b:ok@172.18.0.2:3128 ']'
+ yarn config set httpProxy http://tid_4beeda688b2b:ok@172.18.0.2:3128
yarn config v1.22.19
success Set "httpProxy" to "http://tid_4beeda688b2b:ok@172.18.0.2:3128".
Done in 0.08s.
+ '[' -z http://tid_4beeda688b2b:ok@172.18.0.2:3128 ']'
+ yarn config set httpsProxy http://tid_4beeda688b2b:ok@172.18.0.2:3128
yarn config v1.22.19
success Set "httpsProxy" to "http://tid_4beeda688b2b:ok@172.18.0.2:3128".
Done in 0.09s.
+ yarn install
yarn install v1.22.19
info No lockfile found.
[1/4] Resolving packages...
(node:135) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
warning Resolution field "string-width@4.2.2" is incompatible with requested version "string-width@^5.1.2"
warning Resolution field "strip-ansi@6.0.1" is incompatible with requested version "strip-ansi@^7.0.1"
warning Resolution field "wrap-ansi@7.0.0" is incompatible with requested version "wrap-ansi@^8.1.0"
[2/4] Fetching packages...
[3/4] Linking dependencies...
[4/4] Building fresh packages...
success Saved lockfile.
Done in 10.16s.
+ yarn list --depth=0 --json --non-interactive --no-progress
+ jq -cr '
        [.. | .name?]
        | map(select(.))
        | map(capture("^(?<name>@?[^@]+)@(?<version>.+)$"))
        | sort_by(.name)[]'
{"type":"warning","data":"Resolution field \"string-width@4.2.2\" is incompatible with requested version \"string-width@^5.1.2\""}
{"type":"warning","data":"Resolution field \"strip-ansi@6.0.1\" is incompatible with requested version \"strip-ansi@^7.0.1\""}
{"type":"warning","data":"Resolution field \"wrap-ansi@7.0.0\" is incompatible with requested version \"wrap-ansi@^8.1.0\""}
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=3.4.1
+ tailwind_config_exporter=tailwind.config.exporter2.cjs
+ '[' -f node_modules/tailwindcss/lib/lib/load-config.js ']'
+ tailwind_config_exporter=tailwind.config.exporter3.mjs
+ cp /twcr/worker/../worker/tailwind.config.exporter3.mjs ./
+ set +e
+ node ./tailwind.config.exporter3.mjs tailwind.config.ts
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ echo 'module.exports={plugins:['
+ jq -rs '
        map(select(.name | startswith("@tailwindcss/")))
        | map("require(" + ( .name | tojson ) + "),")[]
      '
+ grep -Ev '"@tailwindcss/postcss7-compat"'
+ true
+ echo ']}'
+ sed 's/^/>>> /'
+ cat tailwind.config.ts
>>> module.exports={plugins:[
>>> ]}
+ node ./tailwind.config.exporter3.mjs tailwind.config.ts
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_end 2024-03-04T03:15:35Z
+ jq -nc --arg key timestamp_attempt_squash_end --arg value 2024-03-04T03:15:35Z '{ key: $key, value: $value }'
+ break
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_end 2024-03-04T03:15:35Z
+ jq -nc --arg key timestamp_end --arg value 2024-03-04T03:15:35Z '{ key: $key, value: $value }'
+ rm /twcr/mnt/results/extract-failed
+ touch /twcr/mnt/results/extract-completed
