==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/OMikkel/tailwind-datepicker-react
+ reporef=master
+ repopath=./demo-app
+ '[' true == true ']'
+ grep -q '^././'
++ echo github.com/OMikkel/tailwind-datepicker-react
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-2df06818fae0
++ echo 'github.com/OMikkel/tailwind-datepicker-react;master;./demo-app'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/b36b92221209
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/OMikkel/tailwind-datepicker-react/bWFzdGVyCg/Li9kZW1vLWFwcAo
+ jq -nc --arg key analysis_key --arg value github.com/OMikkel/tailwind-datepicker-react/bWFzdGVyCg/Li9kZW1vLWFwcAo '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce f42d3b8658be666a
+ jq -nc --arg key analysis_nonce --arg value f42d3b8658be666a '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/OMikkel/tailwind-datepicker-react
+ jq -nc --arg key input_repo_name --arg value github.com/OMikkel/tailwind-datepicker-react '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref master
+ jq -nc --arg key input_repo_ref --arg value master '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./demo-app
+ jq -nc --arg key input_repo_path --arg value ./demo-app '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-04T06:47:24Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-04T06:47:24Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-2df06818fae0
+ pushd /tmp/twcr-2df06818fae0
+ '[' -d .git ']'
+ git clone --depth=1 -b master https://github.com/OMikkel/tailwind-datepicker-react.git .
/tmp/twcr-2df06818fae0 /twcr
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-04T06:47:25Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-04T06:47:25Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha 7eee201ef25a2dc568c1327755c1c6a59c44f615
+ jq -nc --arg key exec_repo_commit_sha --arg value 7eee201ef25a2dc568c1327755c1c6a59c44f615 '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2023-10-13 15:59:47 +0200' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2023-10-13T13:59:47Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2023-10-13T13:59:47Z '{ key: $key, value: $value }'
/tmp/twcr-2df06818fae0/demo-app /tmp/twcr-2df06818fae0 /twcr
+ '[' -z ./demo-app ']'
+ pushd ./demo-app
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ tailwind_config_file_name=tailwind.config.js
+ writetaskstat exec_tailwind_config_file tailwind.config.js
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.js '{ key: $key, value: $value }'
+ cp tailwind.config.js /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-2df06818fae0/demo-app
+ package_manager_name=yarn
+ '[' -z yarn ']'
+ '[' -z yarn ']'
+ writetaskstat exec_node_package_manager yarn
+ jq -nc --arg key exec_node_package_manager --arg value yarn '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-04T06:47:25Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-04T06:47:25Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.js
[squash-package] ERROR: failed to find any match for import path (@types/tailwindcss/tailwind-config)
+ exitcode=1
+ set -e
+ [[ 1 != \0 ]]
+ echo '[worker] WARN: squash failed; retrying with full install'
[worker] WARN: squash failed; retrying with full install
+ attempt_mode=full
+ continue
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_full_begin 2024-03-04T06:47:25Z
+ jq -nc --arg key timestamp_attempt_full_begin --arg value 2024-03-04T06:47:25Z '{ key: $key, value: $value }'
+ [[ full == \s\q\u\a\s\h ]]
+ git clean -fdx
+ git reset --hard
HEAD is now at 7eee201 Update demo app to 1.4.3
+ set +e
+ /twcr/worker/../worker/pm-install.sh yarn /tmp/twcr-2df06818fae0 /twcr/mnt/results
+ package_manager_name=yarn
+ procdir=/tmp/twcr-2df06818fae0
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ '[' -z http://tid_9a14925ee421:ok@172.18.0.2:3128 ']'
+ yarn config set httpProxy http://tid_9a14925ee421:ok@172.18.0.2:3128
yarn config v1.22.19
success Set "httpProxy" to "http://tid_9a14925ee421:ok@172.18.0.2:3128".
Done in 0.05s.
+ '[' -z http://tid_9a14925ee421:ok@172.18.0.2:3128 ']'
+ yarn config set httpsProxy http://tid_9a14925ee421:ok@172.18.0.2:3128
yarn config v1.22.19
success Set "httpsProxy" to "http://tid_9a14925ee421:ok@172.18.0.2:3128".
Done in 0.06s.
+ yarn install
yarn install v1.22.19
warning package-lock.json found. Your project contains lock files generated by tools other than Yarn. It is advised not to mix package managers in order to avoid resolution inconsistencies caused by unsynchronized lock files. To clear this warning, remove package-lock.json.
[1/4] Resolving packages...
[2/4] Fetching packages...
(node:132) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
[3/4] Linking dependencies...
[4/4] Building fresh packages...
Done in 33.80s.
+ yarn list --depth=0 --json --non-interactive --no-progress
+ jq -cr '
        [.. | .name?]
        | map(select(.))
        | map(capture("^(?<name>@?[^@]+)@(?<version>.+)$"))
        | sort_by(.name)[]'
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=3.3.2
+ tailwind_config_exporter=tailwind.config.exporter2.cjs
+ '[' -f node_modules/tailwindcss/lib/lib/load-config.js ']'
+ tailwind_config_exporter=tailwind.config.exporter3.mjs
+ cp /twcr/worker/../worker/tailwind.config.exporter3.mjs ./
+ set +e
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ echo 'module.exports={plugins:['
+ jq -rs '
        map(select(.name | startswith("@tailwindcss/")))
        | map("require(" + ( .name | tojson ) + "),")[]
      '
+ grep -Ev '"@tailwindcss/postcss7-compat"'
+ true
+ echo ']}'
+ cat tailwind.config.js
+ sed 's/^/>>> /'
>>> module.exports={plugins:[
>>> ]}
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_full_end 2024-03-04T06:48:00Z
+ jq -nc --arg key timestamp_attempt_full_end --arg value 2024-03-04T06:48:00Z '{ key: $key, value: $value }'
+ break
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_end 2024-03-04T06:48:00Z
+ jq -nc --arg key timestamp_end --arg value 2024-03-04T06:48:00Z '{ key: $key, value: $value }'
+ rm /twcr/mnt/results/extract-failed
+ touch /twcr/mnt/results/extract-completed
