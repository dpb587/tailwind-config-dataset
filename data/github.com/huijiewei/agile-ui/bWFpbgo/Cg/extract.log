==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/huijiewei/agile-ui
+ reporef=main
+ repopath=./
+ '[' true == true ']'
+ grep -q '^././'
++ echo github.com/huijiewei/agile-ui
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-39e33d061039
++ echo 'github.com/huijiewei/agile-ui;main;./'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/5f7075fc1d26
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/huijiewei/agile-ui/bWFpbgo/Li8K
+ jq -nc --arg key analysis_key --arg value github.com/huijiewei/agile-ui/bWFpbgo/Li8K '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce 296665ce22ea1d40
+ jq -nc --arg key analysis_nonce --arg value 296665ce22ea1d40 '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/huijiewei/agile-ui
+ jq -nc --arg key input_repo_name --arg value github.com/huijiewei/agile-ui '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref main
+ jq -nc --arg key input_repo_ref --arg value main '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./
+ jq -nc --arg key input_repo_path --arg value ./ '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-05T05:41:39Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-05T05:41:39Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-39e33d061039
+ pushd /tmp/twcr-39e33d061039
+ '[' -d .git ']'
+ git clone --depth=1 -b main https://github.com/huijiewei/agile-ui.git .
/tmp/twcr-39e33d061039 /twcr
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-05T05:41:40Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-05T05:41:40Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha a8c888b16c88dccf074c95dcd57ca97659951a65
+ jq -nc --arg key exec_repo_commit_sha --arg value a8c888b16c88dccf074c95dcd57ca97659951a65 '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2023-04-19 21:59:42 +0800' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2023-04-19T13:59:42Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2023-04-19T13:59:42Z '{ key: $key, value: $value }'
+ '[' -z ./ ']'
+ pushd ./
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ tailwind_config_file_name=tailwind.config.js
+ writetaskstat exec_tailwind_config_file tailwind.config.js
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.js '{ key: $key, value: $value }'
/tmp/twcr-39e33d061039 /tmp/twcr-39e33d061039 /twcr
+ cp tailwind.config.js /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-39e33d061039
+ package_manager_name=
+ '[' -z '' ']'
+ '[' ./ '!=' ./ ']'
+ '[' -z '' ']'
+ package_manager_name=npm
+ writetaskstat exec_node_package_manager npm
+ jq -nc --arg key exec_node_package_manager --arg value npm '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-05T05:41:40Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-05T05:41:40Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
>>> {
>>>   "name": "@agile-ui/monorepo",
>>>   "private": true,
>>>   "version": "1.0.0",
>>>   "author": "Huijie Wei (https://github.com/huijiewei)",
>>>   "license": "MIT",
>>>   "engines": {
>>>     "node": ">=16"
>>>   },
>>>   "devDependencies": {
>>>     "tailwindcss": "^3.3.1"
>>>   },
>>>   "workspaces": [
>>>     "packages/*",
>>>     "tooling/*",
>>>     "website"
>>>   ],
>>>   "repository": {
>>>     "type": "git",
>>>     "url": "https://github.com/huijiewei/agile-ui.git"
>>>   },
>>>   "bugs": {
>>>     "url": "https://github.com/huijiewei/agile-ui/issues"
>>>   },
>>>   "homepage": "https://github.com/huijiewei/agile-ui#readme",
>>>   "lint-staged": {
>>>     "*.{js,jsx,cjs,mjs,ts,tsx}": [
>>>       "eslint --cache --fix",
>>>       "prettier --write"
>>>     ],
>>>     "*.{json,md,mdx,html,css}": "prettier --write"
>>>   }
>>> }+ rm -f package-lock.json pnpm-lock.yaml yarn.lock
+ '[' ./ '!=' ./ ']'
+ set +e
+ /twcr/worker/../worker/pm-install.sh npm /tmp/twcr-39e33d061039 /twcr/mnt/results
+ package_manager_name=npm
+ procdir=/tmp/twcr-39e33d061039
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
++ '[' -f package-lock.json ']'
++ echo install
+ npm install --ignore-engines
npm WARN deprecated sourcemap-codec@1.4.8: Please use @jridgewell/sourcemap-codec instead
npm WARN deprecated rollup-plugin-terser@7.0.2: This package has been deprecated and is no longer maintained. Please use @rollup/plugin-terser
npm WARN deprecated remark-mdx-code-meta@2.0.0: Use rehype-mdx-code-props instead
npm WARN deprecated workbox-cacheable-response@6.6.0: workbox-background-sync@6.6.0
npm WARN deprecated workbox-google-analytics@6.6.0: It is not compatible with newer versions of GA starting with v4, as long as you are using GAv3 it should be ok, but the package is not longer being maintained

added 713 packages, and audited 722 packages in 34s

221 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
npm notice 
npm notice New minor version of npm available! 10.2.4 -> 10.5.0
npm notice Changelog: <https://github.com/npm/cli/releases/tag/v10.5.0>
npm notice Run `npm install -g npm@10.5.0` to update!
npm notice 
+ npm query '*'
+ jq -cr '
        map({ name: .name, version: .version })
        | map(select(.name))
        | sort_by(.name)[]
      '
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=3.4.1
+ tailwind_config_exporter=tailwind.config.exporter2.cjs
+ '[' -f node_modules/tailwindcss/lib/lib/load-config.js ']'
+ tailwind_config_exporter=tailwind.config.exporter3.mjs
+ cp /twcr/worker/../worker/tailwind.config.exporter3.mjs ./
+ set +e
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ echo 'module.exports={plugins:['
+ jq -rs '
        map(select(.name | startswith("@tailwindcss/")))
        | map("require(" + ( .name | tojson ) + "),")[]
      '
+ grep -Ev '"@tailwindcss/postcss7-compat"'
+ true
+ echo ']}'
+ cat tailwind.config.js
+ sed 's/^/>>> /'
>>> module.exports={plugins:[
>>> ]}
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_end 2024-03-05T05:42:16Z
+ jq -nc --arg key timestamp_attempt_squash_end --arg value 2024-03-05T05:42:16Z '{ key: $key, value: $value }'
+ break
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_end 2024-03-05T05:42:16Z
+ jq -nc --arg key timestamp_end --arg value 2024-03-05T05:42:16Z '{ key: $key, value: $value }'
+ rm /twcr/mnt/results/extract-failed
+ touch /twcr/mnt/results/extract-completed
