==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/PiyushKalyanpy/GyanaGuru
+ reporef=main
+ repopath=./
+ '[' true == true ']'
+ grep -q '^././'
++ echo github.com/PiyushKalyanpy/GyanaGuru
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-7438495b200a
++ echo 'github.com/PiyushKalyanpy/GyanaGuru;main;./'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/bc615e85c5b9
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/PiyushKalyanpy/GyanaGuru/bWFpbgo/Li8K
+ jq -nc --arg key analysis_key --arg value github.com/PiyushKalyanpy/GyanaGuru/bWFpbgo/Li8K '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce 36d1c103849768fb
+ jq -nc --arg key analysis_nonce --arg value 36d1c103849768fb '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/PiyushKalyanpy/GyanaGuru
+ jq -nc --arg key input_repo_name --arg value github.com/PiyushKalyanpy/GyanaGuru '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref main
+ jq -nc --arg key input_repo_ref --arg value main '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./
+ jq -nc --arg key input_repo_path --arg value ./ '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-04T08:32:28Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-04T08:32:28Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-7438495b200a
+ pushd /tmp/twcr-7438495b200a
+ '[' -d .git ']'
/tmp/twcr-7438495b200a /twcr
+ git clone --depth=1 -b main https://github.com/PiyushKalyanpy/GyanaGuru.git .
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-04T08:32:30Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-04T08:32:30Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha 84477b0bbaf47e7c547e36bb37a975fccb9e54e0
+ jq -nc --arg key exec_repo_commit_sha --arg value 84477b0bbaf47e7c547e36bb37a975fccb9e54e0 '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2023-09-04 00:49:39 +0530' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2023-09-03T19:19:39Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2023-09-03T19:19:39Z '{ key: $key, value: $value }'
/tmp/twcr-7438495b200a /tmp/twcr-7438495b200a /twcr
+ '[' -z ./ ']'
+ pushd ./
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ tailwind_config_file_name=tailwind.config.js
+ writetaskstat exec_tailwind_config_file tailwind.config.js
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.js '{ key: $key, value: $value }'
+ cp tailwind.config.js /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-7438495b200a
+ package_manager_name=yarn
+ '[' -z yarn ']'
+ '[' -z yarn ']'
+ writetaskstat exec_node_package_manager yarn
+ jq -nc --arg key exec_node_package_manager --arg value yarn '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-04T08:32:30Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-04T08:32:30Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
>>> {
>>>   "name": "gyanaguru",
>>>   "version": "0.1.0",
>>>   "private": true,
>>>   "dependencies": {},
>>>   "devDependencies": {
>>>     "tailwindcss": "^3.3.0"
>>>   },
>>>   "engines": {
>>>     "node": "18",
>>>     "npm": "9"
>>>   }
>>> }+ rm -f package-lock.json pnpm-lock.yaml yarn.lock
+ '[' ./ '!=' ./ ']'
+ set +e
+ /twcr/worker/../worker/pm-install.sh yarn /tmp/twcr-7438495b200a /twcr/mnt/results
+ package_manager_name=yarn
+ procdir=/tmp/twcr-7438495b200a
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ '[' -z http://tid_64bffc131dd0:ok@172.18.0.2:3128 ']'
+ yarn config set httpProxy http://tid_64bffc131dd0:ok@172.18.0.2:3128
yarn config v1.22.19
success Set "httpProxy" to "http://tid_64bffc131dd0:ok@172.18.0.2:3128".
Done in 0.04s.
+ '[' -z http://tid_64bffc131dd0:ok@172.18.0.2:3128 ']'
+ yarn config set httpsProxy http://tid_64bffc131dd0:ok@172.18.0.2:3128
yarn config v1.22.19
success Set "httpsProxy" to "http://tid_64bffc131dd0:ok@172.18.0.2:3128".
Done in 0.04s.
+ yarn install
yarn install v1.22.19
info No lockfile found.
[1/5] Validating package.json...
error gyanaguru@0.1.0: The engine "node" is incompatible with this module. Expected version "18". Got "21.6.2"
error Found incompatible module.
info Visit https://yarnpkg.com/en/docs/cli/install for documentation about this command.
+ exitcode=1
+ set -e
+ [[ 1 != \0 ]]
+ [[ squash == \s\q\u\a\s\h ]]
+ echo '[worker] WARN: package manager failed; retrying with full install'
[worker] WARN: package manager failed; retrying with full install
+ attempt_mode=full
+ continue
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_full_begin 2024-03-04T08:32:31Z
+ jq -nc --arg key timestamp_attempt_full_begin --arg value 2024-03-04T08:32:31Z '{ key: $key, value: $value }'
+ [[ full == \s\q\u\a\s\h ]]
+ git clean -fdx
+ git reset --hard
HEAD is now at 84477b0 Merge pull request #609 from PriyansuMaurya/consitent-border-radius-why-choose-us
+ set +e
+ /twcr/worker/../worker/pm-install.sh yarn /tmp/twcr-7438495b200a /twcr/mnt/results
+ package_manager_name=yarn
+ procdir=/tmp/twcr-7438495b200a
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ '[' -z http://tid_64bffc131dd0:ok@172.18.0.2:3128 ']'
+ yarn config set httpProxy http://tid_64bffc131dd0:ok@172.18.0.2:3128
yarn config v1.22.19
success Set "httpProxy" to "http://tid_64bffc131dd0:ok@172.18.0.2:3128".
Done in 0.04s.
+ '[' -z http://tid_64bffc131dd0:ok@172.18.0.2:3128 ']'
+ yarn config set httpsProxy http://tid_64bffc131dd0:ok@172.18.0.2:3128
yarn config v1.22.19
success Set "httpsProxy" to "http://tid_64bffc131dd0:ok@172.18.0.2:3128".
Done in 0.04s.
+ yarn install
yarn install v1.22.19
warning package-lock.json found. Your project contains lock files generated by tools other than Yarn. It is advised not to mix package managers in order to avoid resolution inconsistencies caused by unsynchronized lock files. To clear this warning, remove package-lock.json.
[1/5] Validating package.json...
error gyanaguru@0.1.0: The engine "node" is incompatible with this module. Expected version "18". Got "21.6.2"
error Found incompatible module.
info Visit https://yarnpkg.com/en/docs/cli/install for documentation about this command.
+ exitcode=1
+ set -e
+ [[ 1 != \0 ]]
+ [[ full == \s\q\u\a\s\h ]]
+ exit 1
