==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/stephenkati/Laundry_100
+ reporef=dev
+ repopath=./
++ echo github.com/stephenkati/Laundry_100
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-64a85df98999
++ echo 'github.com/stephenkati/Laundry_100;dev;./'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/094d74a630b6
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/stephenkati/Laundry_100/ZGV2Cg/Li8K
+ jq -nc --arg key analysis_key --arg value github.com/stephenkati/Laundry_100/ZGV2Cg/Li8K '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce d53112a962ef3d74
+ jq -nc --arg key analysis_nonce --arg value d53112a962ef3d74 '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/stephenkati/Laundry_100
+ jq -nc --arg key input_repo_name --arg value github.com/stephenkati/Laundry_100 '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref dev
+ jq -nc --arg key input_repo_ref --arg value dev '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./
+ jq -nc --arg key input_repo_path --arg value ./ '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-02T23:31:38Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-02T23:31:38Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-64a85df98999
/tmp/twcr-64a85df98999 /twcr
+ pushd /tmp/twcr-64a85df98999
+ '[' -d .git ']'
+ git clone --depth=1 -b dev https://github.com/stephenkati/Laundry_100.git .
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-02T23:31:39Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-02T23:31:39Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha fa1e0d4cfef5a08f7dd2399c9c53a792808b143c
+ jq -nc --arg key exec_repo_commit_sha --arg value fa1e0d4cfef5a08f7dd2399c9c53a792808b143c '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2023-10-09 03:43:05 +0300' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2023-10-09T00:43:05Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2023-10-09T00:43:05Z '{ key: $key, value: $value }'
+ '[' -z ./ ']'
+ pushd ./
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ tailwind_config_file_name=tailwind.config.js
+ writetaskstat exec_tailwind_config_file tailwind.config.js
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.js '{ key: $key, value: $value }'
/tmp/twcr-64a85df98999 /tmp/twcr-64a85df98999 /twcr
+ cp tailwind.config.js /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
+ package_manager_name=npm
+ grep -q '"packageManager":[^"]+"pnpm@"' package.json
+ '[' -f pnpm-lock.yaml ']'
+ '[' -f pnpm-workspace.yaml ']'
+ '[' -f /tmp/twcr-64a85df98999/pnpm-workspace.yaml ']'
+ cat README.md
+ grep -q 'pnpm install'
+ grep -q '"packageManager":[^"]+"yarn@"' package.json
+ '[' -f yarn.lock ']'
+ package_manager_name=yarn
+ writetaskstat exec_node_package_manager yarn
+ jq -nc --arg key exec_node_package_manager --arg value yarn '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-02T23:31:39Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-02T23:31:39Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
>>> {
>>>   "name": "laundry-100",
>>>   "private": true,
>>>   "version": "0.0.0",
>>>   "type": "module",
>>>   "dependencies": {
>>>     "daisyui": "^3.3.1"
>>>   },
>>>   "devDependencies": {
>>>     "tailwindcss": "^3.3.3"
>>>   }
>>> }+ set +e
+ /twcr/worker/../worker/pm-install.sh yarn /tmp/twcr-64a85df98999 /twcr/mnt/results
+ package_manager_name=yarn
+ procdir=/tmp/twcr-64a85df98999
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ yarn install --ignore-engines
yarn install v1.22.19
warning package-lock.json found. Your project contains lock files generated by tools other than Yarn. It is advised not to mix package managers in order to avoid resolution inconsistencies caused by unsynchronized lock files. To clear this warning, remove package-lock.json.
[1/4] Resolving packages...
(node:86) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
[2/4] Fetching packages...
[3/4] Linking dependencies...
[4/4] Building fresh packages...
success Saved lockfile.
Done in 4.19s.
+ yarn list --depth=0 --json --non-interactive --no-progress
+ jq -cr '
        [.. | .name?]
        | map(select(.))
        | map(capture("^(?<name>@?[^@]+)@(?<version>.+)$"))
        | sort_by(.name)[]'
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=3.3.3
+ tailwind_config_exporter=tailwind.config.exporter3.mjs
+ true
+ cp /twcr/worker/../worker/tailwind.config.exporter3.mjs ./
+ set +e
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ break
+ echo 'module.exports={plugins:['
+ jq -rs '
        map(select(.name | startswith("@tailwindcss/")))
        | map("require(" + ( .name | tojson ) + "),")[]
      '
+ echo ']}'
+ cat tailwind.config.js
+ sed 's/^/>>> /'
>>> module.exports={plugins:[
>>> ]}
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_end 2024-03-02T23:31:45Z
+ jq -nc --arg key timestamp_attempt_squash_end --arg value 2024-03-02T23:31:45Z '{ key: $key, value: $value }'
+ break
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_end 2024-03-02T23:31:45Z
+ jq -nc --arg key timestamp_end --arg value 2024-03-02T23:31:45Z '{ key: $key, value: $value }'
+ rm /twcr/mnt/results/extract-failed
+ touch /twcr/mnt/results/extract-completed
