==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/danstepanov/create-expo-stack
+ reporef=main
+ repopath=./docs
+ '[' true == true ']'
+ grep -q '^././'
++ echo github.com/danstepanov/create-expo-stack
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-6ddff426307a
++ echo 'github.com/danstepanov/create-expo-stack;main;./docs'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/14273701b99c
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/danstepanov/create-expo-stack/bWFpbgo/Li9kb2NzCg
+ jq -nc --arg key analysis_key --arg value github.com/danstepanov/create-expo-stack/bWFpbgo/Li9kb2NzCg '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce be2de97c4f227f91
+ jq -nc --arg key analysis_nonce --arg value be2de97c4f227f91 '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/danstepanov/create-expo-stack
+ jq -nc --arg key input_repo_name --arg value github.com/danstepanov/create-expo-stack '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref main
+ jq -nc --arg key input_repo_ref --arg value main '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./docs
+ jq -nc --arg key input_repo_path --arg value ./docs '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-04T03:40:37Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-04T03:40:37Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-6ddff426307a
/tmp/twcr-6ddff426307a /twcr
+ pushd /tmp/twcr-6ddff426307a
+ '[' -d .git ']'
+ git clone --depth=1 -b main https://github.com/danstepanov/create-expo-stack.git .
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-04T03:40:38Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-04T03:40:38Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha 160eed8906c1b16f589a76a3c0d3c76d02c2f83e
+ jq -nc --arg key exec_repo_commit_sha --arg value 160eed8906c1b16f589a76a3c0d3c76d02c2f83e '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2024-02-28 23:36:40 -0800' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2024-02-29T07:36:40Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2024-02-29T07:36:40Z '{ key: $key, value: $value }'
+ '[' -z ./docs ']'
+ pushd ./docs
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ '[' -f tailwind.config.cjs ']'
+ '[' -f tailwind.config.mjs ']'
+ tailwind_config_file_name=tailwind.config.mjs
+ writetaskstat exec_tailwind_config_file tailwind.config.mjs
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.mjs '{ key: $key, value: $value }'
/tmp/twcr-6ddff426307a/docs /tmp/twcr-6ddff426307a /twcr
+ cp tailwind.config.mjs /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-6ddff426307a/docs
+ package_manager_name=pnpm
+ '[' -z pnpm ']'
+ '[' -z pnpm ']'
+ writetaskstat exec_node_package_manager pnpm
+ jq -nc --arg key exec_node_package_manager --arg value pnpm '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-04T03:40:38Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-04T03:40:38Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.mjs
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
>>> {
>>>   "name": "create-expo-stack-docs",
>>>   "type": "module",
>>>   "version": "0.0.1",
>>>   "dependencies": {
>>>     "@astrojs/tailwind": "^5.0.2",
>>>     "tailwindcss": "^3.3.5",
>>>     "tailwindcss-animate": "^1.0.7"
>>>   },
>>>   "devDependencies": {}
>>> }+ rm -f package-lock.json pnpm-lock.yaml yarn.lock
+ '[' ./docs '!=' ./ ']'
+ rm -f /tmp/twcr-6ddff426307a/package.json /tmp/twcr-6ddff426307a/package-lock.json /tmp/twcr-6ddff426307a/pnpm-lock.yaml /tmp/twcr-6ddff426307a/yarn.lock
+ set +e
+ /twcr/worker/../worker/pm-install.sh pnpm /tmp/twcr-6ddff426307a /twcr/mnt/results
+ package_manager_name=pnpm
+ procdir=/tmp/twcr-6ddff426307a
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ '[' '!' -f /tmp/twcr-6ddff426307a/package.json ']'
+ '[' '!' -f package.json ']'
++ pnpm -v
+ sed -Ei 's/("pnpm": ")(.+)(")/\18.15.4\3/' package.json
+ pnpm install
Progress: resolved 1, reused 0, downloaded 0, added 0
Progress: resolved 22, reused 0, downloaded 18, added 0
Progress: resolved 53, reused 0, downloaded 43, added 0
Progress: resolved 82, reused 0, downloaded 67, added 0
Progress: resolved 107, reused 0, downloaded 101, added 0
Progress: resolved 132, reused 0, downloaded 116, added 0
Progress: resolved 157, reused 0, downloaded 141, added 0
Progress: resolved 177, reused 0, downloaded 170, added 0
Progress: resolved 209, reused 0, downloaded 196, added 0
Progress: resolved 247, reused 0, downloaded 215, added 0
Progress: resolved 280, reused 0, downloaded 242, added 0
Progress: resolved 313, reused 0, downloaded 268, added 0
Progress: resolved 345, reused 0, downloaded 300, added 0
Progress: resolved 380, reused 0, downloaded 327, added 0
Progress: resolved 413, reused 0, downloaded 356, added 0
Progress: resolved 448, reused 0, downloaded 390, added 0
Progress: resolved 481, reused 0, downloaded 422, added 0
Packages: +457
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Progress: resolved 491, reused 0, downloaded 457, added 456
Progress: resolved 491, reused 0, downloaded 457, added 457, done
.../esbuild@0.19.12/node_modules/esbuild postinstall$ node install.js
.../esbuild@0.19.12/node_modules/esbuild postinstall: Done
.../sharp@0.32.6/node_modules/sharp install$ (node install/libvips && node install/dll-copy && prebuild-install) || (node install/can-compile && node-gyp rebuild && node install/dll-copy)
.../sharp@0.32.6/node_modules/sharp install: sharp: Downloading https://github.com/lovell/sharp-libvips/releases/download/v8.14.5/libvips-8.14.5-linux-x64.tar.br
.../sharp@0.32.6/node_modules/sharp install: sharp: Via proxy http://172.18.0.2:3128 with credentials
.../sharp@0.32.6/node_modules/sharp install: sharp: Integrity check passed for linux-x64
.../sharp@0.32.6/node_modules/sharp install: Done

dependencies:
+ @astrojs/tailwind 5.1.0
+ tailwindcss 3.4.1
+ tailwindcss-animate 1.0.7

Done in 22s
+ pnpm ls --json
+ jq -cr '
        .[]
        | [.dependencies, .devDependencies, .optionalDependencies]
        | map(select(.))[]
        | to_entries
        | map({ name: .key, version: .value.version })
        | sort_by(.name)[]
      '
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=3.4.1
+ tailwind_config_exporter=tailwind.config.exporter2.cjs
+ '[' -f node_modules/tailwindcss/lib/lib/load-config.js ']'
+ tailwind_config_exporter=tailwind.config.exporter3.mjs
+ cp /twcr/worker/../worker/tailwind.config.exporter3.mjs ./
+ set +e
+ node ./tailwind.config.exporter3.mjs tailwind.config.mjs
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ echo 'module.exports={plugins:['
+ jq -rs '
        map(select(.name | startswith("@tailwindcss/")))
        | map("require(" + ( .name | tojson ) + "),")[]
      '
+ grep -Ev '"@tailwindcss/postcss7-compat"'
+ true
+ echo ']}'
+ cat tailwind.config.mjs
+ sed 's/^/>>> /'
>>> module.exports={plugins:[
>>> ]}
+ node ./tailwind.config.exporter3.mjs tailwind.config.mjs
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_end 2024-03-04T03:41:02Z
+ jq -nc --arg key timestamp_attempt_squash_end --arg value 2024-03-04T03:41:02Z '{ key: $key, value: $value }'
+ break
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_end 2024-03-04T03:41:02Z
+ jq -nc --arg key timestamp_end --arg value 2024-03-04T03:41:02Z '{ key: $key, value: $value }'
+ rm /twcr/mnt/results/extract-failed
+ touch /twcr/mnt/results/extract-completed
