==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/pingdotgg/uploadthing
+ reporef=main
+ repopath=./packages/react
+ '[' true == true ']'
+ grep -q '^././'
++ echo github.com/pingdotgg/uploadthing
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-091055af95e8
++ echo 'github.com/pingdotgg/uploadthing;main;./packages/react'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/a0511e92ca11
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/pingdotgg/uploadthing/bWFpbgo/Li9wYWNrYWdlcy9yZWFjdAo
+ jq -nc --arg key analysis_key --arg value github.com/pingdotgg/uploadthing/bWFpbgo/Li9wYWNrYWdlcy9yZWFjdAo '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce aa63e1a21f2b399f
+ jq -nc --arg key analysis_nonce --arg value aa63e1a21f2b399f '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/pingdotgg/uploadthing
+ jq -nc --arg key input_repo_name --arg value github.com/pingdotgg/uploadthing '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref main
+ jq -nc --arg key input_repo_ref --arg value main '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./packages/react
+ jq -nc --arg key input_repo_path --arg value ./packages/react '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-04T02:08:05Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-04T02:08:05Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-091055af95e8
+ pushd /tmp/twcr-091055af95e8
+ '[' -d .git ']'
+ git clone --depth=1 -b main https://github.com/pingdotgg/uploadthing.git .
/tmp/twcr-091055af95e8 /twcr
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-04T02:08:07Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-04T02:08:07Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha 97ca88151ce7e7dfd9b71a7bd6067a68195c83f5
+ jq -nc --arg key exec_repo_commit_sha --arg value 97ca88151ce7e7dfd9b71a7bd6067a68195c83f5 '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2024-03-03 22:31:13 +0100' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2024-03-03T21:31:13Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2024-03-03T21:31:13Z '{ key: $key, value: $value }'
/tmp/twcr-091055af95e8/packages/react /tmp/twcr-091055af95e8 /twcr
+ '[' -z ./packages/react ']'
+ pushd ./packages/react
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ '[' -f tailwind.config.cjs ']'
+ '[' -f tailwind.config.mjs ']'
+ '[' -f tailwind.config.ts ']'
+ tailwind_config_file_name=tailwind.config.ts
+ writetaskstat exec_tailwind_config_file tailwind.config.ts
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.ts '{ key: $key, value: $value }'
+ cp tailwind.config.ts /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-091055af95e8/packages/react
+ package_manager_name=
+ '[' -z '' ']'
+ '[' ./packages/react '!=' ./ ']'
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-091055af95e8
+ package_manager_name=pnpm
+ '[' -z pnpm ']'
+ writetaskstat exec_node_package_manager pnpm
+ jq -nc --arg key exec_node_package_manager --arg value pnpm '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-04T02:08:07Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-04T02:08:07Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.ts
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
>>> {
>>>   "name": "@uploadthing/react",
>>>   "version": "6.3.2",
>>>   "type": "module",
>>>   "license": "MIT",
>>>   "main": "./dist/index.cjs",
>>>   "module": "./dist/index.js",
>>>   "types": "./dist/index.d.ts",
>>>   "exports": {
>>>     "./package.json": "./package.json",
>>>     "./styles.css": "./dist/index.css",
>>>     ".": {
>>>       "import": {
>>>         "types": "./dist/index.d.ts",
>>>         "default": "./dist/index.js"
>>>       },
>>>       "require": {
>>>         "types": "./dist/index.d.cts",
>>>         "default": "./dist/index.cjs"
>>>       }
>>>     },
>>>     "./hooks": {
>>>       "import": {
>>>         "types": "./hooks/index.d.ts",
>>>         "default": "./hooks/index.js"
>>>       },
>>>       "require": {
>>>         "types": "./hooks/index.d.cts",
>>>         "default": "./hooks/index.cjs"
>>>       }
>>>     },
>>>     "./next-ssr-plugin": {
>>>       "import": {
>>>         "types": "./next-ssr-plugin/index.d.ts",
>>>         "default": "./next-ssr-plugin/index.js"
>>>       },
>>>       "require": {
>>>         "types": "./next-ssr-plugin/index.d.cts",
>>>         "default": "./next-ssr-plugin/index.cjs"
>>>       }
>>>     }
>>>   },
>>>   "files": [
>>>     "dist",
>>>     "hooks",
>>>     "next-ssr-plugin"
>>>   ],
>>>   "publishConfig": {
>>>     "access": "public"
>>>   },
>>>   "dependencies": {},
>>>   "peerDependencies": {},
>>>   "peerDependenciesMeta": {
>>>     "next": {
>>>       "optional": true
>>>     }
>>>   },
>>>   "devDependencies": {
>>>     "tailwindcss": "^3.4.1"
>>>   },
>>>   "eslintConfig": {
>>>     "root": true,
>>>     "rules": {
>>>       "no-restricted-imports": [
>>>         "error",
>>>         {
>>>           "patterns": [
>>>             "@uploadthing/react",
>>>             "@uploadthing/react/*"
>>>           ]
>>>         }
>>>       ]
>>>     },
>>>     "extends": [
>>>       "@uploadthing/eslint-config/base",
>>>       "@uploadthing/eslint-config/react"
>>>     ]
>>>   }
>>> }+ rm -f package-lock.json pnpm-lock.yaml yarn.lock
+ '[' ./packages/react '!=' ./ ']'
+ rm -f /tmp/twcr-091055af95e8/package.json /tmp/twcr-091055af95e8/package-lock.json /tmp/twcr-091055af95e8/pnpm-lock.yaml /tmp/twcr-091055af95e8/yarn.lock
+ set +e
+ /twcr/worker/../worker/pm-install.sh pnpm /tmp/twcr-091055af95e8 /twcr/mnt/results
+ package_manager_name=pnpm
+ procdir=/tmp/twcr-091055af95e8
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ '[' '!' -f /tmp/twcr-091055af95e8/package.json ']'
+ '[' '!' -f package.json ']'
++ pnpm -v
+ sed -Ei 's/("pnpm": ")(.+)(")/\18.15.4\3/' package.json
+ pnpm install
Progress: resolved 1, reused 0, downloaded 0, added 0
Progress: resolved 24, reused 0, downloaded 21, added 0
Progress: resolved 55, reused 0, downloaded 41, added 0
Progress: resolved 82, reused 0, downloaded 74, added 0
Progress: resolved 105, reused 0, downloaded 103, added 0
Packages: +105
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Progress: resolved 106, reused 0, downloaded 105, added 105, done

devDependencies:
+ tailwindcss 3.4.1

Done in 5.6s
+ pnpm ls --json
+ jq -cr '
        .[]
        | [.dependencies, .devDependencies, .optionalDependencies]
        | map(select(.))[]
        | to_entries
        | map({ name: .key, version: .value.version })
        | sort_by(.name)[]
      '
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=3.4.1
+ tailwind_config_exporter=tailwind.config.exporter2.cjs
+ '[' -f node_modules/tailwindcss/lib/lib/load-config.js ']'
+ tailwind_config_exporter=tailwind.config.exporter3.mjs
+ cp /twcr/worker/../worker/tailwind.config.exporter3.mjs ./
+ set +e
+ node ./tailwind.config.exporter3.mjs tailwind.config.ts
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ echo 'module.exports={plugins:['
+ jq -rs '
        map(select(.name | startswith("@tailwindcss/")))
        | map("require(" + ( .name | tojson ) + "),")[]
      '
+ grep -Ev '"@tailwindcss/postcss7-compat"'
+ true
+ echo ']}'
+ cat tailwind.config.ts
+ sed 's/^/>>> /'
>>> module.exports={plugins:[
>>> ]}
+ node ./tailwind.config.exporter3.mjs tailwind.config.ts
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_end 2024-03-04T02:08:15Z
+ jq -nc --arg key timestamp_attempt_squash_end --arg value 2024-03-04T02:08:15Z '{ key: $key, value: $value }'
+ break
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_end 2024-03-04T02:08:15Z
+ jq -nc --arg key timestamp_end --arg value 2024-03-04T02:08:15Z '{ key: $key, value: $value }'
+ rm /twcr/mnt/results/extract-failed
+ touch /twcr/mnt/results/extract-completed
