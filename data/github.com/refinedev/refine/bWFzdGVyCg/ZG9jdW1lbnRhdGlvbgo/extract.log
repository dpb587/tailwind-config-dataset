==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/refinedev/refine
+ reporef=master
+ repopath=./documentation
++ echo github.com/refinedev/refine
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-01bc2b95eb5c
++ echo 'github.com/refinedev/refine;master;./documentation'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/520452d22e15
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/refinedev/refine/bWFzdGVyCg/Li9kb2N1bWVudGF0aW9uCg
+ jq -nc --arg key analysis_key --arg value github.com/refinedev/refine/bWFzdGVyCg/Li9kb2N1bWVudGF0aW9uCg '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce 4fc18a2a3f3a13ee
+ jq -nc --arg key analysis_nonce --arg value 4fc18a2a3f3a13ee '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/refinedev/refine
+ jq -nc --arg key input_repo_name --arg value github.com/refinedev/refine '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref master
+ jq -nc --arg key input_repo_ref --arg value master '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./documentation
+ jq -nc --arg key input_repo_path --arg value ./documentation '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-02T23:20:13Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-02T23:20:13Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-01bc2b95eb5c
/tmp/twcr-01bc2b95eb5c /twcr
+ pushd /tmp/twcr-01bc2b95eb5c
+ '[' -d .git ']'
+ git clone --depth=1 -b master https://github.com/refinedev/refine.git .
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-02T23:20:17Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-02T23:20:17Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha 923d8e1d45c009ba586ef8871219e83f826a718b
+ jq -nc --arg key exec_repo_commit_sha --arg value 923d8e1d45c009ba586ef8871219e83f826a718b '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2024-03-01 09:51:59 +0300' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2024-03-01T06:51:59Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2024-03-01T06:51:59Z '{ key: $key, value: $value }'
+ '[' -z ./documentation ']'
+ pushd ./documentation
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ tailwind_config_file_name=tailwind.config.js
+ writetaskstat exec_tailwind_config_file tailwind.config.js
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.js '{ key: $key, value: $value }'
/tmp/twcr-01bc2b95eb5c/documentation /tmp/twcr-01bc2b95eb5c /twcr
+ cp tailwind.config.js /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
+ package_manager_name=npm
+ grep -q '"packageManager":[^"]+"pnpm@"' package.json
+ '[' -f pnpm-lock.yaml ']'
+ '[' -f pnpm-workspace.yaml ']'
+ '[' -f /tmp/twcr-01bc2b95eb5c/pnpm-workspace.yaml ']'
+ cat README.md
+ grep -q 'pnpm install'
+ grep -q '"packageManager":[^"]+"yarn@"' package.json
+ '[' -f yarn.lock ']'
+ grep -q '":[^"]+"workspace:' package.json
+ cat README.md
+ grep -q 'yarn install'
+ package_manager_name=yarn
+ writetaskstat exec_node_package_manager yarn
+ jq -nc --arg key exec_node_package_manager --arg value yarn '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-02T23:20:17Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-02T23:20:17Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
>>> {
>>>   "name": "documentation",
>>>   "version": "0.0.0",
>>>   "private": true,
>>>   "browserslist": {
>>>     "production": [
>>>       ">0.5%",
>>>       "not dead",
>>>       "not op_mini all"
>>>     ],
>>>     "development": [
>>>       "last 1 chrome version",
>>>       "last 1 firefox version",
>>>       "last 1 safari version"
>>>     ]
>>>   },
>>>   "dependencies": {
>>>     "tailwindcss": "^3.3.5"
>>>   },
>>>   "devDependencies": {
>>>     "@tailwindcss/typography": "^0.5.9"
>>>   }
>>> }+ set +e
+ /twcr/worker/../worker/pm-install.sh yarn /tmp/twcr-01bc2b95eb5c /twcr/mnt/results
+ package_manager_name=yarn
+ procdir=/tmp/twcr-01bc2b95eb5c
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ yarn install --ignore-engines
yarn install v1.22.19
info No lockfile found.
warning package-lock.json found. Your project contains lock files generated by tools other than Yarn. It is advised not to mix package managers in order to avoid resolution inconsistencies caused by unsynchronized lock files. To clear this warning, remove package-lock.json.
[1/4] Resolving packages...
(node:90) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
[2/4] Fetching packages...
[3/4] Linking dependencies...
[4/4] Building fresh packages...
success Saved lockfile.
Done in 7.62s.
+ yarn list --depth=0 --json --non-interactive --no-progress
+ jq -cr '
        [.. | .name?]
        | map(select(.))
        | map(capture("^(?<name>@?[^@]+)@(?<version>.+)$"))
        | sort_by(.name)[]'
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=3.4.1
+ tailwind_config_exporter=tailwind.config.exporter3.mjs
+ true
+ cp /twcr/worker/../worker/tailwind.config.exporter3.mjs ./
+ set +e
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ break
+ echo 'module.exports={plugins:['
+ jq -rs '
        map(select(.name | startswith("@tailwindcss/")))
        | map("require(" + ( .name | tojson ) + "),")[]
      '
+ echo ']}'
+ cat tailwind.config.js
+ sed 's/^/>>> /'
>>> module.exports={plugins:[
>>> require("@tailwindcss/typography"),
>>> ]}
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_end 2024-03-02T23:20:26Z
+ jq -nc --arg key timestamp_attempt_squash_end --arg value 2024-03-02T23:20:26Z '{ key: $key, value: $value }'
+ break
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_end 2024-03-02T23:20:26Z
+ jq -nc --arg key timestamp_end --arg value 2024-03-02T23:20:26Z '{ key: $key, value: $value }'
+ rm /twcr/mnt/results/extract-failed
+ touch /twcr/mnt/results/extract-completed
