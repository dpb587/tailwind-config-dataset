==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/timolins/react-hot-toast
+ reporef=main
+ repopath=./site
++ echo github.com/timolins/react-hot-toast
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-48ad7cf0b27e
++ echo 'github.com/timolins/react-hot-toast;main;./site'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/2abca53eb797
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/timolins/react-hot-toast/bWFpbgo/Li9zaXRlCg
+ jq -nc --arg key analysis_key --arg value github.com/timolins/react-hot-toast/bWFpbgo/Li9zaXRlCg '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce a822e25dabfb129b
+ jq -nc --arg key analysis_nonce --arg value a822e25dabfb129b '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/timolins/react-hot-toast
+ jq -nc --arg key input_repo_name --arg value github.com/timolins/react-hot-toast '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref main
+ jq -nc --arg key input_repo_ref --arg value main '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./site
+ jq -nc --arg key input_repo_path --arg value ./site '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-02T22:41:10Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-02T22:41:10Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-48ad7cf0b27e
/tmp/twcr-48ad7cf0b27e /twcr
+ pushd /tmp/twcr-48ad7cf0b27e
+ '[' -d .git ']'
+ git clone --depth=1 -b main https://github.com/timolins/react-hot-toast.git .
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-02T22:41:11Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-02T22:41:11Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha 1f7005356bd419100541a7dcd38d79fad2a2314e
+ jq -nc --arg key exec_repo_commit_sha --arg value 1f7005356bd419100541a7dcd38d79fad2a2314e '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2024-01-22 21:12:18 +0100' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2024-01-22T20:12:18Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2024-01-22T20:12:18Z '{ key: $key, value: $value }'
+ '[' -z ./site ']'
+ pushd ./site
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ tailwind_config_file_name=tailwind.config.js
+ writetaskstat exec_tailwind_config_file tailwind.config.js
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.js '{ key: $key, value: $value }'
/tmp/twcr-48ad7cf0b27e/site /tmp/twcr-48ad7cf0b27e /twcr
+ cp tailwind.config.js /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
+ package_manager_name=npm
+ grep -q '"packageManager":[^"]+"pnpm@"' package.json
+ '[' -f pnpm-lock.yaml ']'
+ package_manager_name=pnpm
+ writetaskstat exec_node_package_manager pnpm
+ jq -nc --arg key exec_node_package_manager --arg value pnpm '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-02T22:41:11Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-02T22:41:11Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
>>> {
>>>   "name": "site",
>>>   "dependencies": {},
>>>   "devDependencies": {
>>>     "@tailwindcss/typography": "^0.5.3",
>>>     "tailwindcss": "^3.1.5"
>>>   }
>>> }+ set +e
+ /twcr/worker/../worker/pm-install.sh pnpm /tmp/twcr-48ad7cf0b27e /twcr/mnt/results
+ package_manager_name=pnpm
+ procdir=/tmp/twcr-48ad7cf0b27e
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ '[' '!' -f /tmp/twcr-48ad7cf0b27e/package.json ']'
++ pnpm -v
+ sed -Ei 's/("pnpm": ")(.+)(")/\18.15.4\3/' /tmp/twcr-48ad7cf0b27e/package.json
+ '[' '!' -f package.json ']'
++ pnpm -v
+ sed -Ei 's/("pnpm": ")(.+)(")/\18.15.4\3/' package.json
+ pnpm install
Progress: resolved 0, reused 0, downloaded 1, added 0
Progress: resolved 46, reused 0, downloaded 45, added 0
Packages: +66
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Progress: resolved 67, reused 0, downloaded 66, added 66, done

devDependencies:
+ @tailwindcss/typography 0.5.3
+ tailwindcss 3.1.5

Done in 2.7s
+ pnpm ls --json
+ jq -cr '
        .[]
        | [.dependencies, .devDependencies, .optionalDependencies]
        | map(select(.))[]
        | to_entries
        | map({ name: .key, version: .value.version })
        | sort_by(.name)[]
      '
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=3.1.5
+ tailwind_config_exporter=tailwind.config.exporter3.mjs
+ true
+ cp /twcr/worker/../worker/tailwind.config.exporter3.mjs ./
+ set +e
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
node:internal/modules/esm/resolve:263
    throw new ERR_MODULE_NOT_FOUND(
          ^

Error [ERR_MODULE_NOT_FOUND]: Cannot find module '/tmp/twcr-48ad7cf0b27e/site/node_modules/tailwindcss/lib/lib/load-config.js' imported from /tmp/twcr-48ad7cf0b27e/site/tailwind.config.exporter3.mjs
    at finalizeResolution (node:internal/modules/esm/resolve:263:11)
    at moduleResolve (node:internal/modules/esm/resolve:908:10)
    at defaultResolve (node:internal/modules/esm/resolve:1131:11)
    at ModuleLoader.defaultResolve (node:internal/modules/esm/loader:390:12)
    at ModuleLoader.resolve (node:internal/modules/esm/loader:359:25)
    at ModuleLoader.getModuleJob (node:internal/modules/esm/loader:234:38)
    at ModuleWrap.<anonymous> (node:internal/modules/esm/module_job:85:39)
    at link (node:internal/modules/esm/module_job:84:36) {
  code: 'ERR_MODULE_NOT_FOUND',
  url: 'file:///tmp/twcr-48ad7cf0b27e/site/node_modules/tailwindcss/lib/lib/load-config.js'
}

Node.js v21.6.2
+ exitcode=1
+ set -e
+ [[ 1 != \0 ]]
+ [[ tailwind.config.exporter3.mjs == \t\a\i\l\w\i\n\d\.\c\o\n\f\i\g\.\e\x\p\o\r\t\e\r\3\.\m\j\s ]]
+ echo '[worker] WARN: exporter failed; retrying with alternative'
[worker] WARN: exporter failed; retrying with alternative
+ tailwind_config_exporter=tailwind.config.exporter2.cjs
+ continue
+ true
+ cp /twcr/worker/../worker/tailwind.config.exporter2.cjs ./
+ set +e
+ node ./tailwind.config.exporter2.cjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ break
+ echo 'module.exports={plugins:['
+ jq -rs '
        map(select(.name | startswith("@tailwindcss/")))
        | map("require(" + ( .name | tojson ) + "),")[]
      '
+ echo ']}'
+ cat tailwind.config.js
+ sed 's/^/>>> /'
>>> module.exports={plugins:[
>>> require("@tailwindcss/typography"),
>>> ]}
+ node ./tailwind.config.exporter2.cjs tailwind.config.js
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_end 2024-03-02T22:41:16Z
+ jq -nc --arg key timestamp_attempt_squash_end --arg value 2024-03-02T22:41:16Z '{ key: $key, value: $value }'
+ break
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_end 2024-03-02T22:41:16Z
+ jq -nc --arg key timestamp_end --arg value 2024-03-02T22:41:16Z '{ key: $key, value: $value }'
+ rm /twcr/mnt/results/extract-failed
+ touch /twcr/mnt/results/extract-completed
