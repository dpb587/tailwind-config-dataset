==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/enzonotario/esjs-dolar-api
+ reporef=main
+ repopath=./
+ '[' true == true ']'
+ grep -q '^././'
++ echo github.com/enzonotario/esjs-dolar-api
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-51625b10065b
++ echo 'github.com/enzonotario/esjs-dolar-api;main;./'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/a07607c35880
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/enzonotario/esjs-dolar-api/bWFpbgo/Li8K
+ jq -nc --arg key analysis_key --arg value github.com/enzonotario/esjs-dolar-api/bWFpbgo/Li8K '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce 519cc5c97ee75c0c
+ jq -nc --arg key analysis_nonce --arg value 519cc5c97ee75c0c '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/enzonotario/esjs-dolar-api
+ jq -nc --arg key input_repo_name --arg value github.com/enzonotario/esjs-dolar-api '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref main
+ jq -nc --arg key input_repo_ref --arg value main '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./
+ jq -nc --arg key input_repo_path --arg value ./ '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-03T17:46:34Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-03T17:46:34Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-51625b10065b
+ pushd /tmp/twcr-51625b10065b
+ '[' -d .git ']'
+ git clone --depth=1 -b main https://github.com/enzonotario/esjs-dolar-api.git .
/tmp/twcr-51625b10065b /twcr
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-03T17:46:36Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-03T17:46:36Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha 8ce84009dfe8895482ffb5428b254d2c7eea667c
+ jq -nc --arg key exec_repo_commit_sha --arg value 8ce84009dfe8895482ffb5428b254d2c7eea667c '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2024-03-03 15:00:29 +0000' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2024-03-03T15:00:29Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2024-03-03T15:00:29Z '{ key: $key, value: $value }'
/tmp/twcr-51625b10065b /tmp/twcr-51625b10065b /twcr
+ '[' -z ./ ']'
+ pushd ./
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ tailwind_config_file_name=tailwind.config.js
+ writetaskstat exec_tailwind_config_file tailwind.config.js
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.js '{ key: $key, value: $value }'
+ cp tailwind.config.js /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-51625b10065b
+ package_manager_name=pnpm
+ '[' -z pnpm ']'
+ '[' -z pnpm ']'
+ writetaskstat exec_node_package_manager pnpm
+ jq -nc --arg key exec_node_package_manager --arg value pnpm '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-03T17:46:36Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-03T17:46:36Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
+ rm -f package-lock.json pnpm-lock.yaml yarn.lock
>>> {
>>>   "name": "esjs-dolar-api",
>>>   "version": "0.0.1",
>>>   "type": "module",
>>>   "license": "MIT",
>>>   "devDependencies": {
>>>     "@egoist/tailwindcss-icons": "^1.7.1",
>>>     "tailwindcss": "latest"
>>>   },
>>>   "dependencies": {}
>>> }+ '[' ./ '!=' ./ ']'
+ set +e
+ /twcr/worker/../worker/pm-install.sh pnpm /tmp/twcr-51625b10065b /twcr/mnt/results
+ package_manager_name=pnpm
+ procdir=/tmp/twcr-51625b10065b
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ '[' '!' -f /tmp/twcr-51625b10065b/package.json ']'
++ pnpm -v
+ sed -Ei 's/("pnpm": ")(.+)(")/\18.15.4\3/' /tmp/twcr-51625b10065b/package.json
+ '[' '!' -f package.json ']'
++ pnpm -v
+ sed -Ei 's/("pnpm": ")(.+)(")/\18.15.4\3/' package.json
+ pnpm install
Progress: resolved 1, reused 0, downloaded 0, added 0
Progress: resolved 26, reused 0, downloaded 20, added 0
Progress: resolved 56, reused 0, downloaded 49, added 0
Progress: resolved 95, reused 0, downloaded 81, added 0
Progress: resolved 131, reused 0, downloaded 118, added 0
Packages: +136
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Progress: resolved 137, reused 0, downloaded 136, added 136, done

devDependencies:
+ @egoist/tailwindcss-icons 1.7.4
+ tailwindcss 3.4.1

Done in 5.7s
+ pnpm ls --json
+ jq -cr '
        .[]
        | [.dependencies, .devDependencies, .optionalDependencies]
        | map(select(.))[]
        | to_entries
        | map({ name: .key, version: .value.version })
        | sort_by(.name)[]
      '
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=3.4.1
+ tailwind_config_exporter=tailwind.config.exporter2.cjs
+ '[' -f node_modules/tailwindcss/lib/lib/load-config.js ']'
+ tailwind_config_exporter=tailwind.config.exporter3.mjs
+ cp /twcr/worker/../worker/tailwind.config.exporter3.mjs ./
+ set +e
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
/tmp/twcr-51625b10065b/node_modules/.pnpm/@egoist+tailwindcss-icons@1.7.4_tailwindcss@3.4.1/node_modules/@egoist/tailwindcss-icons/dist/index.cjs:119
            throw new Error(
                  ^

Error: Icon collection "mdi" not found. Please install @iconify-json/mdi or @iconify/json
    at /tmp/twcr-51625b10065b/node_modules/.pnpm/@egoist+tailwindcss-icons@1.7.4_tailwindcss@3.4.1/node_modules/@egoist/tailwindcss-icons/dist/index.cjs:119:19
    at Array.reduce (<anonymous>)
    at getIconCollections (/tmp/twcr-51625b10065b/node_modules/.pnpm/@egoist+tailwindcss-icons@1.7.4_tailwindcss@3.4.1/node_modules/@egoist/tailwindcss-icons/dist/index.cjs:115:22)
    at /tmp/twcr-51625b10065b/tailwind.config.js:14:20
    at evalModule (/tmp/twcr-51625b10065b/node_modules/.pnpm/jiti@1.21.0/node_modules/jiti/dist/jiti.js:1:256443)
    at jiti (/tmp/twcr-51625b10065b/node_modules/.pnpm/jiti@1.21.0/node_modules/jiti/dist/jiti.js:1:254371)
    at /tmp/twcr-51625b10065b/node_modules/.pnpm/tailwindcss@3.4.1/node_modules/tailwindcss/lib/lib/load-config.js:48:30
    at Object.loadConfig (/tmp/twcr-51625b10065b/node_modules/.pnpm/tailwindcss@3.4.1/node_modules/tailwindcss/lib/lib/load-config.js:50:6)
    at file:///tmp/twcr-51625b10065b/tailwind.config.exporter3.mjs:5:28
    at ModuleJob.run (node:internal/modules/esm/module_job:218:25)

Node.js v21.6.2
+ exitcode=1
+ set -e
+ [[ 1 != \0 ]]
+ [[ squash == \s\q\u\a\s\h ]]
+ echo '[worker] WARN: exporter failed; retrying with full install'
[worker] WARN: exporter failed; retrying with full install
+ attempt_mode=full
+ continue
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_full_begin 2024-03-03T17:46:43Z
+ jq -nc --arg key timestamp_attempt_full_begin --arg value 2024-03-03T17:46:43Z '{ key: $key, value: $value }'
+ [[ full == \s\q\u\a\s\h ]]
+ git checkout .
Updated 2 paths from the index
+ git clean -fdx
Removing node_modules/
Removing tailwind.config.exporter3.mjs
+ set +e
+ /twcr/worker/../worker/pm-install.sh pnpm /tmp/twcr-51625b10065b /twcr/mnt/results
+ package_manager_name=pnpm
+ procdir=/tmp/twcr-51625b10065b
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ '[' '!' -f /tmp/twcr-51625b10065b/package.json ']'
++ pnpm -v
+ sed -Ei 's/("pnpm": ")(.+)(")/\18.15.4\3/' /tmp/twcr-51625b10065b/package.json
+ '[' '!' -f package.json ']'
++ pnpm -v
+ sed -Ei 's/("pnpm": ")(.+)(")/\18.15.4\3/' package.json
+ pnpm install
Lockfile is up to date, resolution step is skipped
Progress: resolved 1, reused 0, downloaded 0, added 0
Packages: +827
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Progress: resolved 827, reused 96, downloaded 29, added 125
Progress: resolved 827, reused 96, downloaded 90, added 186
Progress: resolved 827, reused 96, downloaded 149, added 243
Progress: resolved 827, reused 96, downloaded 195, added 291
Progress: resolved 827, reused 96, downloaded 254, added 350
Progress: resolved 827, reused 96, downloaded 302, added 398
Progress: resolved 827, reused 96, downloaded 335, added 431
Progress: resolved 827, reused 96, downloaded 368, added 465
Progress: resolved 827, reused 96, downloaded 410, added 507
Progress: resolved 827, reused 96, downloaded 479, added 576
Progress: resolved 827, reused 96, downloaded 540, added 636
Progress: resolved 827, reused 96, downloaded 586, added 683
Progress: resolved 827, reused 96, downloaded 622, added 718
Progress: resolved 827, reused 96, downloaded 677, added 773
Progress: resolved 827, reused 96, downloaded 708, added 805
Progress: resolved 827, reused 96, downloaded 725, added 822
Progress: resolved 827, reused 96, downloaded 729, added 826
Progress: resolved 827, reused 96, downloaded 730, added 827, done
.../node_modules/vue-demi postinstall$ node ./scripts/postinstall.js
.../node_modules/vue-demi postinstall$ node ./scripts/postinstall.js
.../node_modules/vue-demi postinstall: Done
.../node_modules/vue-demi postinstall: Done
.../esbuild@0.14.47/node_modules/esbuild postinstall$ node install.js
.../node_modules/workerd postinstall$ node install.js
.../esbuild@0.19.10/node_modules/esbuild postinstall$ node install.js
.../esbuild@0.18.20/node_modules/esbuild postinstall$ node install.js
.../esbuild@0.14.47/node_modules/esbuild postinstall: Done
.../node_modules/workerd postinstall: Done
.../esbuild@0.19.10/node_modules/esbuild postinstall: Done
.../esbuild@0.18.20/node_modules/esbuild postinstall: Done

dependencies:
+ dotenv 16.3.1

devDependencies:
+ @antfu/eslint-config 1.0.0-beta.29
+ @egoist/tailwindcss-icons 1.7.1
+ @es-js/vite-plugin-esjs 0.0.16
+ @hono/vite-dev-server 0.0.12
+ @iconify-json/mdi 1.1.63
+ @intlify/unplugin-vue-i18n 1.4.0
+ @resvg/resvg-js 2.4.1
+ @types/node 18.17.1
+ @vueuse/core 10.5.0
+ autoprefixer 10.4.17
+ cheerio 1.0.0-rc.12
+ cors 2.8.5
+ date-fns 3.3.1
+ eslint 8.52.0
+ eslint-plugin-import 2.29.0
+ hono 3.11.10
+ iconv-lite 0.6.3
+ postcss 8.4.35
+ prettier 3.0.3
+ prettier-plugin-esjs 0.0.2
+ sitemap 7.1.1
+ tailwindcss 3.4.1
+ tsx 3.12.7
+ typescript 5.2.2
+ vercel 32.7.2
+ vite 4.5.0
+ vitepress 1.0.0-rc.42
+ vitepress-theme-openapi 0.0.2-alpha.19
+ vitest 0.34.6
+ vue 3.3.7
+ vue-i18n 9.6.1
+ x-satori 0.1.5

Done in 20s
+ pnpm ls --json
+ jq -cr '
        .[]
        | [.dependencies, .devDependencies, .optionalDependencies]
        | map(select(.))[]
        | to_entries
        | map({ name: .key, version: .value.version })
        | sort_by(.name)[]
      '
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=3.4.1
+ tailwind_config_exporter=tailwind.config.exporter2.cjs
+ '[' -f node_modules/tailwindcss/lib/lib/load-config.js ']'
+ tailwind_config_exporter=tailwind.config.exporter3.mjs
+ cp /twcr/worker/../worker/tailwind.config.exporter3.mjs ./
+ set +e
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ echo 'module.exports={plugins:['
+ jq -rs '
        map(select(.name | startswith("@tailwindcss/")))
        | map("require(" + ( .name | tojson ) + "),")[]
      '
+ grep -Ev '"@tailwindcss/postcss7-compat"'
+ true
+ echo ']}'
+ cat tailwind.config.js
+ sed 's/^/>>> /'
>>> module.exports={plugins:[
>>> ]}
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_full_end 2024-03-03T17:47:06Z
+ jq -nc --arg key timestamp_attempt_full_end --arg value 2024-03-03T17:47:06Z '{ key: $key, value: $value }'
+ break
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_end 2024-03-03T17:47:06Z
+ jq -nc --arg key timestamp_end --arg value 2024-03-03T17:47:06Z '{ key: $key, value: $value }'
+ rm /twcr/mnt/results/extract-failed
+ touch /twcr/mnt/results/extract-completed
