==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/alazyartist/tricking-3d
+ reporef=master
+ repopath=./frontend
+ '[' true == true ']'
+ grep -q '^././'
++ echo github.com/alazyartist/tricking-3d
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-71c62dad232e
++ echo 'github.com/alazyartist/tricking-3d;master;./frontend'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/dad8a2031579
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/alazyartist/tricking-3d/bWFzdGVyCg/Li9mcm9udGVuZAo
+ jq -nc --arg key analysis_key --arg value github.com/alazyartist/tricking-3d/bWFzdGVyCg/Li9mcm9udGVuZAo '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce 101deed9f6613296
+ jq -nc --arg key analysis_nonce --arg value 101deed9f6613296 '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/alazyartist/tricking-3d
+ jq -nc --arg key input_repo_name --arg value github.com/alazyartist/tricking-3d '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref master
+ jq -nc --arg key input_repo_ref --arg value master '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./frontend
+ jq -nc --arg key input_repo_path --arg value ./frontend '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-05T12:02:07Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-05T12:02:07Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-71c62dad232e
+ pushd /tmp/twcr-71c62dad232e
+ '[' -d .git ']'
+ git clone --depth=1 -b master https://github.com/alazyartist/tricking-3d.git .
/tmp/twcr-71c62dad232e /twcr
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-05T12:02:10Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-05T12:02:10Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha 5ee2daa65159456f9e951ffe9dd22e0329e7e1b4
+ jq -nc --arg key exec_repo_commit_sha --arg value 5ee2daa65159456f9e951ffe9dd22e0329e7e1b4 '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2024-02-19 18:40:09 -0700' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2024-02-20T01:40:09Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2024-02-20T01:40:09Z '{ key: $key, value: $value }'
/tmp/twcr-71c62dad232e/frontend /tmp/twcr-71c62dad232e /twcr
+ '[' -z ./frontend ']'
+ pushd ./frontend
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ '[' -f tailwind.config.cjs ']'
+ tailwind_config_file_name=tailwind.config.cjs
+ writetaskstat exec_tailwind_config_file tailwind.config.cjs
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.cjs '{ key: $key, value: $value }'
+ cp tailwind.config.cjs /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-71c62dad232e/frontend
+ package_manager_name=
+ '[' -z '' ']'
+ '[' ./frontend '!=' ./ ']'
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-71c62dad232e
+ package_manager_name=pnpm
+ '[' -z pnpm ']'
+ writetaskstat exec_node_package_manager pnpm
+ jq -nc --arg key exec_node_package_manager --arg value pnpm '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-05T12:02:10Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-05T12:02:10Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.cjs
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
+ rm -f package-lock.json pnpm-lock.yaml yarn.lock
>>> {
>>>   "name": "tricking-3d",
>>>   "version": "0.3.0",
>>>   "homepage": "https://trickedex.app",
>>>   "private": true,
>>>   "proxy": "http://localhost:3000",
>>>   "prisma": {
>>>     "schema": "../prisma/schema.prisma"
>>>   },
>>>   "dependencies": {},
>>>   "eslintConfig": {
>>>     "extends": [
>>>       "react-app",
>>>       "react-app/jest"
>>>     ]
>>>   },
>>>   "browserslist": {
>>>     "production": [
>>>       ">0.2%",
>>>       "not dead",
>>>       "not op_mini all"
>>>     ],
>>>     "development": [
>>>       "last 1 chrome version",
>>>       "last 1 firefox version",
>>>       "last 1 safari version"
>>>     ]
>>>   },
>>>   "devDependencies": {
>>>     "tailwindcss": "^3.3.5"
>>>   }
>>> }+ '[' ./frontend '!=' ./ ']'
+ rm -f /tmp/twcr-71c62dad232e/package.json /tmp/twcr-71c62dad232e/package-lock.json /tmp/twcr-71c62dad232e/pnpm-lock.yaml /tmp/twcr-71c62dad232e/yarn.lock
+ set +e
+ /twcr/worker/../worker/pm-install.sh pnpm /tmp/twcr-71c62dad232e /twcr/mnt/results
+ package_manager_name=pnpm
+ procdir=/tmp/twcr-71c62dad232e
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ '[' '!' -f /tmp/twcr-71c62dad232e/package.json ']'
+ '[' '!' -f package.json ']'
++ pnpm -v
+ sed -Ei 's/("pnpm": ")(.+)(")/\18.15.4\3/' package.json
+ pnpm install
 ERR_PNPM_FETCH_403  GET http://registry.npmjs.org/tailwindcss: Forbidden - 403

This error happened while installing a direct dependency of /tmp/twcr-71c62dad232e/frontend

No authorization header was set for the request.

No authorization settings were found in the configs.
Try to log in to the registry by running "pnpm login"
or add the auth tokens manually to the ~/.npmrc file.
+ exitcode=1
+ set -e
+ [[ 1 != \0 ]]
+ [[ squash == \s\q\u\a\s\h ]]
+ echo '[worker] WARN: package manager failed; retrying with full install'
[worker] WARN: package manager failed; retrying with full install
+ attempt_mode=full
+ continue
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_full_begin 2024-03-05T12:02:11Z
+ jq -nc --arg key timestamp_attempt_full_begin --arg value 2024-03-05T12:02:11Z '{ key: $key, value: $value }'
+ [[ full == \s\q\u\a\s\h ]]
+ git clean -fdx
+ git reset --hard
HEAD is now at 5ee2daa order leaderboard
+ set +e
+ /twcr/worker/../worker/pm-install.sh pnpm /tmp/twcr-71c62dad232e /twcr/mnt/results
+ package_manager_name=pnpm
+ procdir=/tmp/twcr-71c62dad232e
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ '[' '!' -f /tmp/twcr-71c62dad232e/package.json ']'
++ pnpm -v
+ sed -Ei 's/("pnpm": ")(.+)(")/\18.15.4\3/' /tmp/twcr-71c62dad232e/package.json
+ '[' '!' -f package.json ']'
++ pnpm -v
+ sed -Ei 's/("pnpm": ")(.+)(")/\18.15.4\3/' package.json
+ pnpm install
Scope: all 2 workspace projects
 ERR_PNPM_FETCH_403  GET http://registry.npmjs.org/@types/d3/-/d3-7.4.2.tgz: Forbidden - 403

This error happened while installing a direct dependency of /tmp/twcr-71c62dad232e/frontend

No authorization header was set for the request.

No authorization settings were found in the configs.
Try to log in to the registry by running "pnpm login"
or add the auth tokens manually to the ~/.npmrc file.
+ exitcode=1
+ set -e
+ [[ 1 != \0 ]]
+ [[ full == \s\q\u\a\s\h ]]
+ exit 1
