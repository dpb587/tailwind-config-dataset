==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/Benbinbin/TagDown
+ reporef=main
+ repopath=./
+ grep -q '^././'
++ echo github.com/Benbinbin/TagDown
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-0a381574bb36
++ echo 'github.com/Benbinbin/TagDown;main;./'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/7cd1c70959ad
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr /+ _-
++ tr -d =
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/Benbinbin/TagDown/bWFpbgo/Li8K
+ jq -nc --arg key analysis_key --arg value github.com/Benbinbin/TagDown/bWFpbgo/Li8K '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce d2d3a9c44985bdd2
+ jq -nc --arg key analysis_nonce --arg value d2d3a9c44985bdd2 '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/Benbinbin/TagDown
+ jq -nc --arg key input_repo_name --arg value github.com/Benbinbin/TagDown '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref main
+ jq -nc --arg key input_repo_ref --arg value main '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./
+ jq -nc --arg key input_repo_path --arg value ./ '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-03T16:21:48Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-03T16:21:48Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-0a381574bb36
+ pushd /tmp/twcr-0a381574bb36
+ '[' -d .git ']'
+ git clone --depth=1 -b main https://github.com/Benbinbin/TagDown.git .
/tmp/twcr-0a381574bb36 /twcr
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-03T16:21:50Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-03T16:21:50Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha ee1a6e0a0c453e083b35d802f569ac42b9da4a09
+ jq -nc --arg key exec_repo_commit_sha --arg value ee1a6e0a0c453e083b35d802f569ac42b9da4a09 '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2023-05-04 22:53:28 +0800' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2023-05-04T14:53:28Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2023-05-04T14:53:28Z '{ key: $key, value: $value }'
+ '[' -z ./ ']'
+ pushd ./
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ tailwind_config_file_name=tailwind.config.js
+ writetaskstat exec_tailwind_config_file tailwind.config.js
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.js '{ key: $key, value: $value }'
/tmp/twcr-0a381574bb36 /tmp/twcr-0a381574bb36 /twcr
+ cp tailwind.config.js /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-0a381574bb36
+ package_manager_name=
+ '[' -z '' ']'
+ '[' ./ '!=' ./ ']'
+ '[' -z '' ']'
+ package_manager_name=npm
+ writetaskstat exec_node_package_manager npm
+ jq -nc --arg key exec_node_package_manager --arg value npm '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-03T16:21:50Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-03T16:21:50Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
>>> {
>>>   "name": "tagdown",
>>>   "version": "2.0.0",
>>>   "dependencies": {},
>>>   "devDependencies": {
>>>     "tailwindcss": "^2.2.9"
>>>   }
>>> }+ set +e
+ /twcr/worker/../worker/pm-install.sh npm /tmp/twcr-0a381574bb36 /twcr/mnt/results
+ package_manager_name=npm
+ procdir=/tmp/twcr-0a381574bb36
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
++ '[' -f package-lock.json ']'
++ echo ci
+ npm ci --ignore-engines
npm WARN old lockfile 
npm WARN old lockfile The package-lock.json file was created with an old version of npm,
npm WARN old lockfile so supplemental metadata must be fetched from the registry.
npm WARN old lockfile 
npm WARN old lockfile This is a one-time fix-up, please be patient...
npm WARN old lockfile 
npm notice 
npm notice New minor version of npm available! 10.2.4 -> 10.5.0
npm notice Changelog: <https://github.com/npm/cli/releases/tag/v10.5.0>
npm notice Run `npm install -g npm@10.5.0` to update!
npm notice 
npm ERR! code E403
npm ERR! 403 403 Forbidden - GET https://registry.nlark.com/yaml/download/yaml-1.10.2.tgz
npm ERR! 403 In most cases, you or one of your dependencies are requesting
npm ERR! 403 a package version that is forbidden by your security policy, or
npm ERR! 403 on a server you do not have access to.

npm ERR! A complete log of this run can be found in: /home/node/.npm/_logs/2024-03-03T16_21_51_003Z-debug-0.log
+ exitcode=1
+ set -e
+ [[ 1 != \0 ]]
+ [[ squash == \s\q\u\a\s\h ]]
+ echo '[worker] WARN: package manager failed; retrying with full install'
[worker] WARN: package manager failed; retrying with full install
+ attempt_mode=full
+ continue
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_full_begin 2024-03-03T16:23:09Z
+ jq -nc --arg key timestamp_attempt_full_begin --arg value 2024-03-03T16:23:09Z '{ key: $key, value: $value }'
+ [[ full == \s\q\u\a\s\h ]]
+ git checkout .
Updated 1 path from the index
+ git clean -fdx
+ set +e
+ /twcr/worker/../worker/pm-install.sh npm /tmp/twcr-0a381574bb36 /twcr/mnt/results
+ package_manager_name=npm
+ procdir=/tmp/twcr-0a381574bb36
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
++ '[' -f package-lock.json ']'
++ echo ci
+ npm ci --ignore-engines
npm WARN old lockfile 
npm WARN old lockfile The package-lock.json file was created with an old version of npm,
npm WARN old lockfile so supplemental metadata must be fetched from the registry.
npm WARN old lockfile 
npm WARN old lockfile This is a one-time fix-up, please be patient...
npm WARN old lockfile 
npm ERR! code E403
npm ERR! 403 403 Forbidden - GET https://registry.nlark.com/yaml/download/yaml-1.10.2.tgz
npm ERR! 403 In most cases, you or one of your dependencies are requesting
npm ERR! 403 a package version that is forbidden by your security policy, or
npm ERR! 403 on a server you do not have access to.

npm ERR! A complete log of this run can be found in: /home/node/.npm/_logs/2024-03-03T16_23_09_968Z-debug-0.log
+ exitcode=1
+ set -e
+ [[ 1 != \0 ]]
+ [[ full == \s\q\u\a\s\h ]]
+ exit 1
