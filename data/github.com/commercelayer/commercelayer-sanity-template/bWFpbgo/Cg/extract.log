==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/commercelayer/commercelayer-sanity-template
+ reporef=main
+ repopath=./
+ '[' true == true ']'
+ grep -q '^././'
++ echo github.com/commercelayer/commercelayer-sanity-template
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-7e3d1e566bbc
++ echo 'github.com/commercelayer/commercelayer-sanity-template;main;./'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/6111f1c0f252
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/commercelayer/commercelayer-sanity-template/bWFpbgo/Li8K
+ jq -nc --arg key analysis_key --arg value github.com/commercelayer/commercelayer-sanity-template/bWFpbgo/Li8K '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce ff9ca5bcdcd82315
+ jq -nc --arg key analysis_nonce --arg value ff9ca5bcdcd82315 '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/commercelayer/commercelayer-sanity-template
+ jq -nc --arg key input_repo_name --arg value github.com/commercelayer/commercelayer-sanity-template '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref main
+ jq -nc --arg key input_repo_ref --arg value main '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./
+ jq -nc --arg key input_repo_path --arg value ./ '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-04T06:46:13Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-04T06:46:13Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-7e3d1e566bbc
/tmp/twcr-7e3d1e566bbc /twcr
+ pushd /tmp/twcr-7e3d1e566bbc
+ '[' -d .git ']'
+ git clone --depth=1 -b main https://github.com/commercelayer/commercelayer-sanity-template.git .
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-04T06:46:14Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-04T06:46:14Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha 2716b28544aea4f469999a080ab0cd0bd80c9a47
+ jq -nc --arg key exec_repo_commit_sha --arg value 2716b28544aea4f469999a080ab0cd0bd80c9a47 '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2024-02-14 10:33:11 +0100' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2024-02-14T09:33:11Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2024-02-14T09:33:11Z '{ key: $key, value: $value }'
+ '[' -z ./ ']'
+ pushd ./
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ tailwind_config_file_name=tailwind.config.js
+ writetaskstat exec_tailwind_config_file tailwind.config.js
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.js '{ key: $key, value: $value }'
/tmp/twcr-7e3d1e566bbc /tmp/twcr-7e3d1e566bbc /twcr
+ cp tailwind.config.js /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-7e3d1e566bbc
+ package_manager_name=pnpm
+ '[' -z pnpm ']'
+ '[' -z pnpm ']'
+ writetaskstat exec_node_package_manager pnpm
+ jq -nc --arg key exec_node_package_manager --arg value pnpm '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-04T06:46:14Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-04T06:46:14Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
>>> {
>>>   "name": "sanity-template-commercelayer",
>>>   "version": "1.4.0",
>>>   "description": "A multi-country ecommerce template built with Commerce Layer, Next.js, Sanity studio, and deployed to Netlify.",
>>>   "private": true,
>>>   "repository": {
>>>     "type": "git",
>>>     "url": "git+https://github.com/commercelayer/commercelayer-sanity-template.git"
>>>   },
>>>   "release": {
>>>     "branches": [
>>>       "+([0-9])?(.{+([0-9]),x}).x",
>>>       "main",
>>>       {
>>>         "name": "beta",
>>>         "prerelease": true
>>>       },
>>>       {
>>>         "name": "alpha",
>>>         "prerelease": true
>>>       }
>>>     ],
>>>     "author": {
>>>       "name": "Bolaji Ayodeji",
>>>       "email": "bolaji@commercelayer.io"
>>>     },
>>>     "license": "MIT",
>>>     "bugs": {
>>>       "url": "https://github.com/commercelayer/commercelayer-sanity-template/issues"
>>>     },
>>>     "homepage": "https://github.com/commercelayer/commercelayer-sanity-template#readme",
>>>     "keywords": [
>>>       "commercelayer",
>>>       "sanity",
>>>       "reactjs",
>>>       "nextjs",
>>>       "jamstack",
>>>       "headless",
>>>       "ecommerce",
>>>       "api"
>>>     ],
>>>     "plugins": [
>>>       "@semantic-release/commit-analyzer",
>>>       "@semantic-release/release-notes-generator",
>>>       "@semantic-release/changelog",
>>>       "@semantic-release/npm",
>>>       "@semantic-release/git",
>>>       [
>>>         "@semantic-release/github",
>>>         {
>>>           "addReleases": "top"
>>>         }
>>>       ]
>>>     ]
>>>   },
>>>   "dependencies": {
>>>     "@tailwindcss/aspect-ratio": "^0.4.0",
>>>     "@tailwindcss/forms": "^0.4.0",
>>>     "@tailwindcss/typography": "^0.5.2"
>>>   },
>>>   "devDependencies": {
>>>     "tailwindcss": "^3.0.23"
>>>   },
>>>   "engines": {
>>>     "node": ">=16",
>>>     "npm": ">=10.4.0"
>>>   }
>>> }+ rm -f package-lock.json pnpm-lock.yaml yarn.lock
+ '[' ./ '!=' ./ ']'
+ set +e
+ /twcr/worker/../worker/pm-install.sh pnpm /tmp/twcr-7e3d1e566bbc /twcr/mnt/results
+ package_manager_name=pnpm
+ procdir=/tmp/twcr-7e3d1e566bbc
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ '[' '!' -f /tmp/twcr-7e3d1e566bbc/package.json ']'
++ pnpm -v
+ sed -Ei 's/("pnpm": ")(.+)(")/\18.15.4\3/' /tmp/twcr-7e3d1e566bbc/package.json
+ '[' '!' -f package.json ']'
++ pnpm -v
+ sed -Ei 's/("pnpm": ")(.+)(")/\18.15.4\3/' package.json
+ pnpm install
Progress: resolved 1, reused 0, downloaded 0, added 0
Progress: resolved 32, reused 0, downloaded 22, added 0
Progress: resolved 69, reused 0, downloaded 58, added 0
Progress: resolved 101, reused 0, downloaded 91, added 0
Packages: +113
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Progress: resolved 114, reused 0, downloaded 113, added 113, done

dependencies:
+ @tailwindcss/aspect-ratio 0.4.2
+ @tailwindcss/forms 0.4.1 (0.5.7 is available)
+ @tailwindcss/typography 0.5.10

devDependencies:
+ tailwindcss 3.4.1

Done in 4.6s
+ pnpm ls --json
+ jq -cr '
        .[]
        | [.dependencies, .devDependencies, .optionalDependencies]
        | map(select(.))[]
        | to_entries
        | map({ name: .key, version: .value.version })
        | sort_by(.name)[]
      '
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=3.4.1
+ tailwind_config_exporter=tailwind.config.exporter2.cjs
+ '[' -f node_modules/tailwindcss/lib/lib/load-config.js ']'
+ tailwind_config_exporter=tailwind.config.exporter3.mjs
+ cp /twcr/worker/../worker/tailwind.config.exporter3.mjs ./
+ set +e
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ echo 'module.exports={plugins:['
+ jq -rs '
        map(select(.name | startswith("@tailwindcss/")))
        | map("require(" + ( .name | tojson ) + "),")[]
      '
+ grep -Ev '"@tailwindcss/postcss7-compat"'
+ echo ']}'
+ cat tailwind.config.js
+ sed 's/^/>>> /'
>>> module.exports={plugins:[
>>> require("@tailwindcss/aspect-ratio"),
>>> require("@tailwindcss/forms"),
>>> require("@tailwindcss/typography"),
>>> ]}
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_end 2024-03-04T06:46:21Z
+ jq -nc --arg key timestamp_attempt_squash_end --arg value 2024-03-04T06:46:21Z '{ key: $key, value: $value }'
+ break
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_end 2024-03-04T06:46:21Z
+ jq -nc --arg key timestamp_end --arg value 2024-03-04T06:46:21Z '{ key: $key, value: $value }'
+ rm /twcr/mnt/results/extract-failed
+ touch /twcr/mnt/results/extract-completed
