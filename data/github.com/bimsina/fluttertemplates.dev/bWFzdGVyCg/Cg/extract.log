==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/bimsina/fluttertemplates.dev
+ reporef=master
+ repopath=./
++ echo github.com/bimsina/fluttertemplates.dev
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-22281d25a268
++ echo 'github.com/bimsina/fluttertemplates.dev;master;./'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/184c9a6daa4e
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/bimsina/fluttertemplates.dev/bWFzdGVyCg/Li8K
+ jq -nc --arg key analysis_key --arg value github.com/bimsina/fluttertemplates.dev/bWFzdGVyCg/Li8K '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce d3b229892b4d6c05
+ jq -nc --arg key analysis_nonce --arg value d3b229892b4d6c05 '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/bimsina/fluttertemplates.dev
+ jq -nc --arg key input_repo_name --arg value github.com/bimsina/fluttertemplates.dev '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref master
+ jq -nc --arg key input_repo_ref --arg value master '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./
+ jq -nc --arg key input_repo_path --arg value ./ '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-02T23:55:10Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-02T23:55:10Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-22281d25a268
/tmp/twcr-22281d25a268 /twcr
+ pushd /tmp/twcr-22281d25a268
+ '[' -d .git ']'
+ git clone --depth=1 -b master https://github.com/bimsina/fluttertemplates.dev.git .
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-02T23:55:11Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-02T23:55:11Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha 490190b691fac91c5d49679f4737764b8a7cfce5
+ jq -nc --arg key exec_repo_commit_sha --arg value 490190b691fac91c5d49679f4737764b8a7cfce5 '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2023-01-20 18:49:11 +0545' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2023-01-20T13:04:11Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2023-01-20T13:04:11Z '{ key: $key, value: $value }'
/tmp/twcr-22281d25a268 /tmp/twcr-22281d25a268 /twcr
+ '[' -z ./ ']'
+ pushd ./
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ tailwind_config_file_name=tailwind.config.js
+ writetaskstat exec_tailwind_config_file tailwind.config.js
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.js '{ key: $key, value: $value }'
+ cp tailwind.config.js /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
+ package_manager_name=npm
+ grep -q '"packageManager":[^"]+"pnpm@"' package.json
+ '[' -f pnpm-lock.yaml ']'
+ '[' -f pnpm-workspace.yaml ']'
+ '[' -f /tmp/twcr-22281d25a268/pnpm-workspace.yaml ']'
+ cat README.md
+ grep -q 'pnpm install'
+ grep -q '"packageManager":[^"]+"yarn@"' package.json
+ '[' -f yarn.lock ']'
+ package_manager_name=yarn
+ writetaskstat exec_node_package_manager yarn
+ jq -nc --arg key exec_node_package_manager --arg value yarn '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-02T23:55:11Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-02T23:55:11Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
>>> {
>>>   "name": "flutter-templates",
>>>   "version": "0.1.0",
>>>   "homepage": "https://fluttertemplates.dev",
>>>   "private": true,
>>>   "license": "MIT",
>>>   "repository": {
>>>     "type": "git",
>>>     "url": "git+https://github.com/bimsina/fluttertemplates.dev.git"
>>>   },
>>>   "author": "Bibek Timsina <timsinabibek960@gmail.com>",
>>>   "dependencies": {},
>>>   "devDependencies": {
>>>     "tailwindcss": "^3.2.4"
>>>   }
>>> }+ set +e
+ /twcr/worker/../worker/pm-install.sh yarn /tmp/twcr-22281d25a268 /twcr/mnt/results
+ package_manager_name=yarn
+ procdir=/tmp/twcr-22281d25a268
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ yarn install --ignore-engines
yarn install v1.22.19
[1/4] Resolving packages...
[2/4] Fetching packages...
(node:86) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
[3/4] Linking dependencies...
warning " > tailwindcss@3.2.4" has unmet peer dependency "postcss@^8.0.9".
[4/4] Building fresh packages...
success Saved lockfile.
Done in 4.89s.
+ yarn list --depth=0 --json --non-interactive --no-progress
+ jq -cr '
        [.. | .name?]
        | map(select(.))
        | map(capture("^(?<name>@?[^@]+)@(?<version>.+)$"))
        | sort_by(.name)[]'
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=3.2.4
+ tailwind_config_exporter=tailwind.config.exporter3.mjs
+ true
+ cp /twcr/worker/../worker/tailwind.config.exporter3.mjs ./
+ set +e
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
node:internal/modules/esm/resolve:263
    throw new ERR_MODULE_NOT_FOUND(
          ^

Error [ERR_MODULE_NOT_FOUND]: Cannot find module '/tmp/twcr-22281d25a268/node_modules/tailwindcss/lib/lib/load-config.js' imported from /tmp/twcr-22281d25a268/tailwind.config.exporter3.mjs
    at finalizeResolution (node:internal/modules/esm/resolve:263:11)
    at moduleResolve (node:internal/modules/esm/resolve:908:10)
    at defaultResolve (node:internal/modules/esm/resolve:1131:11)
    at ModuleLoader.defaultResolve (node:internal/modules/esm/loader:390:12)
    at ModuleLoader.resolve (node:internal/modules/esm/loader:359:25)
    at ModuleLoader.getModuleJob (node:internal/modules/esm/loader:234:38)
    at ModuleWrap.<anonymous> (node:internal/modules/esm/module_job:85:39)
    at link (node:internal/modules/esm/module_job:84:36) {
  code: 'ERR_MODULE_NOT_FOUND',
  url: 'file:///tmp/twcr-22281d25a268/node_modules/tailwindcss/lib/lib/load-config.js'
}

Node.js v21.6.2
+ exitcode=1
+ set -e
+ [[ 1 != \0 ]]
+ [[ tailwind.config.exporter3.mjs == \t\a\i\l\w\i\n\d\.\c\o\n\f\i\g\.\e\x\p\o\r\t\e\r\3\.\m\j\s ]]
+ echo '[worker] WARN: exporter failed; retrying with alternative'
[worker] WARN: exporter failed; retrying with alternative
+ tailwind_config_exporter=tailwind.config.exporter2.cjs
+ continue
+ true
+ cp /twcr/worker/../worker/tailwind.config.exporter2.cjs ./
+ set +e
+ node ./tailwind.config.exporter2.cjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ break
+ echo 'module.exports={plugins:['
+ jq -rs '
        map(select(.name | startswith("@tailwindcss/")))
        | map("require(" + ( .name | tojson ) + "),")[]
      '
+ echo ']}'
+ cat tailwind.config.js
+ sed 's/^/>>> /'
>>> module.exports={plugins:[
>>> ]}
+ node ./tailwind.config.exporter2.cjs tailwind.config.js
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_end 2024-03-02T23:55:18Z
+ jq -nc --arg key timestamp_attempt_squash_end --arg value 2024-03-02T23:55:18Z '{ key: $key, value: $value }'
+ break
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_end 2024-03-02T23:55:18Z
+ jq -nc --arg key timestamp_end --arg value 2024-03-02T23:55:18Z '{ key: $key, value: $value }'
+ rm /twcr/mnt/results/extract-failed
+ touch /twcr/mnt/results/extract-completed
