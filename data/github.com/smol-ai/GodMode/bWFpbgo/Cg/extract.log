==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/smol-ai/GodMode
+ reporef=main
+ repopath=./
++ echo github.com/smol-ai/GodMode
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-b2dcd5f5de3f
++ echo 'github.com/smol-ai/GodMode;main;./'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/07753b20ee67
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/smol-ai/GodMode/bWFpbgo/Li8K
+ jq -nc --arg key analysis_key --arg value github.com/smol-ai/GodMode/bWFpbgo/Li8K '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce c56564d7a8230240
+ jq -nc --arg key analysis_nonce --arg value c56564d7a8230240 '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/smol-ai/GodMode
+ jq -nc --arg key input_repo_name --arg value github.com/smol-ai/GodMode '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref main
+ jq -nc --arg key input_repo_ref --arg value main '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./
+ jq -nc --arg key input_repo_path --arg value ./ '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-02T22:59:51Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-02T22:59:51Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-b2dcd5f5de3f
/tmp/twcr-b2dcd5f5de3f /twcr
+ pushd /tmp/twcr-b2dcd5f5de3f
+ '[' -d .git ']'
+ git clone --depth=1 -b main https://github.com/smol-ai/GodMode.git .
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-02T22:59:52Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-02T22:59:52Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha 8ac3ffde96ab72d992b5d5cf1743673e610cb07b
+ jq -nc --arg key exec_repo_commit_sha --arg value 8ac3ffde96ab72d992b5d5cf1743673e610cb07b '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2023-11-16 20:32:46 -0500' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2023-11-17T01:32:46Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2023-11-17T01:32:46Z '{ key: $key, value: $value }'
/tmp/twcr-b2dcd5f5de3f /tmp/twcr-b2dcd5f5de3f /twcr
+ '[' -z ./ ']'
+ pushd ./
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ tailwind_config_file_name=tailwind.config.js
+ writetaskstat exec_tailwind_config_file tailwind.config.js
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.js '{ key: $key, value: $value }'
+ cp tailwind.config.js /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
+ package_manager_name=npm
+ grep -q '"packageManager":[^"]+"pnpm@"' package.json
+ '[' -f pnpm-lock.yaml ']'
+ '[' -f pnpm-workspace.yaml ']'
+ '[' -f /tmp/twcr-b2dcd5f5de3f/pnpm-workspace.yaml ']'
+ cat README.md
+ grep -q 'pnpm install'
+ grep -q '"packageManager":[^"]+"yarn@"' package.json
+ '[' -f yarn.lock ']'
+ grep -q '":[^"]+"workspace:' package.json
+ cat README.md
+ grep -q 'yarn install'
+ writetaskstat exec_node_package_manager npm
+ jq -nc --arg key exec_node_package_manager --arg value npm '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-02T22:59:52Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-02T22:59:52Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
>>> {
>>>   "name": "godmode",
>>>   "productName": "GodMode",
>>>   "version": "1.0.0-beta.9",
>>>   "author": "smol-ai",
>>>   "description": "Simultaneously chat with ChatGPT, Claude, Bing, Bard, Llama2, et al in a full chat browser, NO API",
>>>   "main": "src/main/main.ts",
>>>   "config": {
>>>     "forge": "./forge.config.js"
>>>   },
>>>   "keywords": [
>>>     "chatgpt",
>>>     "openai",
>>>     "mac"
>>>   ],
>>>   "license": "MIT",
>>>   "dependencies": {},
>>>   "repository": {
>>>     "type": "git",
>>>     "url": "https://github.com/smol-ai/GodMode"
>>>   },
>>>   "devDependencies": {
>>>     "tailwindcss": "^3.3.3"
>>>   },
>>>   "build": {
>>>     "productName": "GodMode",
>>>     "appId": "org.smol.GodMode",
>>>     "asar": true,
>>>     "asarUnpack": "**\\*.{node,dll}",
>>>     "copyright": "Copyright 2023 smol.ai/godmode",
>>>     "files": [
>>>       "dist",
>>>       "node_modules",
>>>       "package.json"
>>>     ],
>>>     "afterSign": "scripts/scripts/notarize.js",
>>>     "mac": {
>>>       "target": {
>>>         "target": "default",
>>>         "arch": [
>>>           "arm64",
>>>           "universal",
>>>           "x64"
>>>         ]
>>>       },
>>>       "category": "public.app-category.developer-tools",
>>>       "type": "distribution",
>>>       "hardenedRuntime": true,
>>>       "entitlements": "assets/entitlements.mac.plist",
>>>       "entitlementsInherit": "assets/entitlements.mac.plist",
>>>       "gatekeeperAssess": false
>>>     },
>>>     "dmg": {
>>>       "contents": [
>>>         {
>>>           "x": 130,
>>>           "y": 220
>>>         },
>>>         {
>>>           "x": 410,
>>>           "y": 220,
>>>           "type": "link",
>>>           "path": "/Applications"
>>>         }
>>>       ]
>>>     },
>>>     "win": {
>>>       "target": [
>>>         {
>>>           "target": "nsis",
>>>           "arch": [
>>>             "x64",
>>>             "arm64"
>>>           ]
>>>         }
>>>       ]
>>>     },
>>>     "linux": {
>>>       "target": [
>>>         {
>>>           "target": "AppImage",
>>>           "arch": [
>>>             "x64",
>>>             "arm64"
>>>           ]
>>>         }
>>>       ],
>>>       "category": "Development"
>>>     },
>>>     "directories": {
>>>       "app": "release/app",
>>>       "buildResources": "assets",
>>>       "output": "release/build"
>>>     },
>>>     "extraResources": [
>>>       "./assets/**"
>>>     ],
>>>     "publish": {
>>>       "provider": "github",
>>>       "owner": "smol-ai",
>>>       "repo": "GodMode"
>>>     }
>>>   },
>>>   "devEngines": {
>>>     "node": ">=18.x",
>>>     "npm": ">=7.x"
>>>   },
>>>   "electronmon": {
>>>     "patterns": [
>>>       "!**/**",
>>>       "src/main/**"
>>>     ],
>>>     "logLevel": "verbose"
>>>   }
>>> }+ set +e
+ /twcr/worker/../worker/pm-install.sh npm /tmp/twcr-b2dcd5f5de3f /twcr/mnt/results
+ package_manager_name=npm
+ procdir=/tmp/twcr-b2dcd5f5de3f
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
++ '[' -f package-lock.json ']'
++ echo ci
+ npm ci --ignore-engines

added 99 packages, and audited 100 packages in 5s

14 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
npm notice 
npm notice New minor version of npm available! 10.2.4 -> 10.5.0
npm notice Changelog: <https://github.com/npm/cli/releases/tag/v10.5.0>
npm notice Run `npm install -g npm@10.5.0` to update!
npm notice 
+ npm query '*'
+ jq -cr '
        map({ name: .name, version: .version })
        | map(select(.name))
        | sort_by(.name)[]
      '
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=3.3.3
+ tailwind_config_exporter=tailwind.config.exporter3.mjs
+ true
+ cp /twcr/worker/../worker/tailwind.config.exporter3.mjs ./
+ set +e
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ break
+ echo 'module.exports={plugins:['
+ jq -rs '
        map(select(.name | startswith("@tailwindcss/")))
        | map("require(" + ( .name | tojson ) + "),")[]
      '
+ echo ']}'
+ cat tailwind.config.js
+ sed 's/^/>>> /'
>>> module.exports={plugins:[
>>> ]}
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_end 2024-03-02T22:59:58Z
+ jq -nc --arg key timestamp_attempt_squash_end --arg value 2024-03-02T22:59:58Z '{ key: $key, value: $value }'
+ break
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_end 2024-03-02T22:59:58Z
+ jq -nc --arg key timestamp_end --arg value 2024-03-02T22:59:58Z '{ key: $key, value: $value }'
+ rm /twcr/mnt/results/extract-failed
+ touch /twcr/mnt/results/extract-completed
