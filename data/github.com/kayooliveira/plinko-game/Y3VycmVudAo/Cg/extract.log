==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/kayooliveira/plinko-game
+ reporef=current
+ repopath=./
+ '[' true == true ']'
+ grep -q '^././'
++ echo github.com/kayooliveira/plinko-game
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-68ac98d51c9c
++ echo 'github.com/kayooliveira/plinko-game;current;./'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/294b5926864f
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/kayooliveira/plinko-game/Y3VycmVudAo/Li8K
+ jq -nc --arg key analysis_key --arg value github.com/kayooliveira/plinko-game/Y3VycmVudAo/Li8K '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce 0bcbb5ae814fbb70
+ jq -nc --arg key analysis_nonce --arg value 0bcbb5ae814fbb70 '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/kayooliveira/plinko-game
+ jq -nc --arg key input_repo_name --arg value github.com/kayooliveira/plinko-game '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref current
+ jq -nc --arg key input_repo_ref --arg value current '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./
+ jq -nc --arg key input_repo_path --arg value ./ '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-05T05:31:15Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-05T05:31:15Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-68ac98d51c9c
+ pushd /tmp/twcr-68ac98d51c9c
+ '[' -d .git ']'
+ git clone --depth=1 -b current https://github.com/kayooliveira/plinko-game.git .
/tmp/twcr-68ac98d51c9c /twcr
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-05T05:31:16Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-05T05:31:16Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha b06f887fa34efe42b4ea5185e9517953cf7c3b9b
+ jq -nc --arg key exec_repo_commit_sha --arg value b06f887fa34efe42b4ea5185e9517953cf7c3b9b '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2024-01-15 16:48:55 -0300' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2024-01-15T19:48:55Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2024-01-15T19:48:55Z '{ key: $key, value: $value }'
+ '[' -z ./ ']'
+ pushd ./
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ tailwind_config_file_name=tailwind.config.js
+ writetaskstat exec_tailwind_config_file tailwind.config.js
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.js '{ key: $key, value: $value }'
/tmp/twcr-68ac98d51c9c /tmp/twcr-68ac98d51c9c /twcr
+ cp tailwind.config.js /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-68ac98d51c9c
+ package_manager_name=
+ '[' -z '' ']'
+ '[' ./ '!=' ./ ']'
+ '[' -z '' ']'
+ package_manager_name=npm
+ writetaskstat exec_node_package_manager npm
+ jq -nc --arg key exec_node_package_manager --arg value npm '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-05T05:31:16Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-05T05:31:16Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
>>> {
>>>   "name": "plinko",
>>>   "version": "0.0.0",
>>>   "dependencies": {},
>>>   "devDependencies": {}
>>> }+ rm -f package-lock.json pnpm-lock.yaml yarn.lock
+ '[' ./ '!=' ./ ']'
+ set +e
+ /twcr/worker/../worker/pm-install.sh npm /tmp/twcr-68ac98d51c9c /twcr/mnt/results
+ package_manager_name=npm
+ procdir=/tmp/twcr-68ac98d51c9c
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
++ '[' -f package-lock.json ']'
++ echo install
+ npm install --ignore-engines

up to date, audited 1 package in 302ms

found 0 vulnerabilities
+ npm query '*'
+ jq -cr '
        map({ name: .name, version: .version })
        | map(select(.name))
        | sort_by(.name)[]
      '
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=null
+ tailwind_config_exporter=tailwind.config.exporter2.cjs
+ '[' -f node_modules/tailwindcss/lib/lib/load-config.js ']'
+ cp /twcr/worker/../worker/tailwind.config.exporter2.cjs ./
+ set +e
+ node ./tailwind.config.exporter2.cjs tailwind.config.js
node:internal/modules/cjs/loader:1152
  throw err;
  ^

Error: Cannot find module 'tailwindcss/resolveConfig.js'
Require stack:
- /tmp/twcr-68ac98d51c9c/tailwind.config.exporter2.cjs
    at Module._resolveFilename (node:internal/modules/cjs/loader:1149:15)
    at Module._load (node:internal/modules/cjs/loader:990:27)
    at Module.require (node:internal/modules/cjs/loader:1237:19)
    at require (node:internal/modules/helpers:176:18)
    at Object.<anonymous> (/tmp/twcr-68ac98d51c9c/tailwind.config.exporter2.cjs:1:23)
    at Module._compile (node:internal/modules/cjs/loader:1378:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)
    at Module.load (node:internal/modules/cjs/loader:1212:32)
    at Module._load (node:internal/modules/cjs/loader:1028:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [ '/tmp/twcr-68ac98d51c9c/tailwind.config.exporter2.cjs' ]
}

Node.js v21.6.2
+ exitcode=1
+ set -e
+ [[ 1 != \0 ]]
+ [[ squash == \s\q\u\a\s\h ]]
+ echo '[worker] WARN: exporter failed; retrying with full install'
[worker] WARN: exporter failed; retrying with full install
+ attempt_mode=full
+ continue
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_full_begin 2024-03-05T05:31:17Z
+ jq -nc --arg key timestamp_attempt_full_begin --arg value 2024-03-05T05:31:17Z '{ key: $key, value: $value }'
+ [[ full == \s\q\u\a\s\h ]]
+ git clean -fdx
Removing package-lock.json
Removing tailwind.config.exporter2.cjs
+ git reset --hard
HEAD is now at b06f887 assets(update PIX qr code asset img):art:
+ set +e
+ /twcr/worker/../worker/pm-install.sh npm /tmp/twcr-68ac98d51c9c /twcr/mnt/results
+ package_manager_name=npm
+ procdir=/tmp/twcr-68ac98d51c9c
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
++ '[' -f package-lock.json ']'
++ echo install
+ npm install --ignore-engines
npm WARN deprecated @types/classnames@2.3.1: This is a stub types definition. classnames provides its own type definitions, so you do not need this installed.

added 533 packages, and audited 534 packages in 41s

144 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
npm notice 
npm notice New minor version of npm available! 10.2.4 -> 10.5.0
npm notice Changelog: <https://github.com/npm/cli/releases/tag/v10.5.0>
npm notice Run `npm install -g npm@10.5.0` to update!
npm notice 
+ npm query '*'
+ jq -cr '
        map({ name: .name, version: .version })
        | map(select(.name))
        | sort_by(.name)[]
      '
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=3.4.1
+ tailwind_config_exporter=tailwind.config.exporter2.cjs
+ '[' -f node_modules/tailwindcss/lib/lib/load-config.js ']'
+ tailwind_config_exporter=tailwind.config.exporter3.mjs
+ cp /twcr/worker/../worker/tailwind.config.exporter3.mjs ./
+ set +e
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ echo 'module.exports={plugins:['
+ jq -rs '
        map(select(.name | startswith("@tailwindcss/")))
        | map("require(" + ( .name | tojson ) + "),")[]
      '
+ grep -Ev '"@tailwindcss/postcss7-compat"'
+ true
+ echo ']}'
+ cat tailwind.config.js
+ sed 's/^/>>> /'
>>> module.exports={plugins:[
>>> ]}
+ node ./tailwind.config.exporter3.mjs tailwind.config.js
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_full_end 2024-03-05T05:32:00Z
+ jq -nc --arg key timestamp_attempt_full_end --arg value 2024-03-05T05:32:00Z '{ key: $key, value: $value }'
+ break
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_end 2024-03-05T05:32:00Z
+ jq -nc --arg key timestamp_end --arg value 2024-03-05T05:32:00Z '{ key: $key, value: $value }'
+ rm /twcr/mnt/results/extract-failed
+ touch /twcr/mnt/results/extract-completed
