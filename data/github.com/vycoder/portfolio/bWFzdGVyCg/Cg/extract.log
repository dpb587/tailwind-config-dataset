==== RUN-DOCKER
+++ dirname -- ./worker/run.sh
++ cd -- ./worker
++ pwd
+ twcrdir=/twcr/worker/..
+ repo=github.com/vycoder/portfolio
+ reporef=master
+ repopath=./
+ '[' true == true ']'
+ grep -q '^././'
++ echo github.com/vycoder/portfolio
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ procdir=/tmp/twcr-2c18fe242230
++ echo 'github.com/vycoder/portfolio;master;./'
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-12
+ datadir=/twcr/worker/../mnt/dataset/data/852691def6dc
+ '[' '!' -z /twcr/mnt/results ']'
+ datadir=/twcr/mnt/results
+ touch /twcr/mnt/results/extract-failed
++ base64
++ tr -d =
++ tr /+ _-
++ base64
++ tr -d =
++ tr /+ _-
+ writetaskstat analysis_key github.com/vycoder/portfolio/bWFzdGVyCg/Li8K
+ jq -nc --arg key analysis_key --arg value github.com/vycoder/portfolio/bWFzdGVyCg/Li8K '{ key: $key, value: $value }'
++ date -u +%Y%m%d%H%M%S
++ sha256sum
++ awk '{ print $1 }'
++ cut -c1-16
++ head -c 32 /dev/urandom
+ writetaskstat analysis_nonce 93da3bbf8c12f895
+ jq -nc --arg key analysis_nonce --arg value 93da3bbf8c12f895 '{ key: $key, value: $value }'
+ writetaskstat input_repo_name github.com/vycoder/portfolio
+ jq -nc --arg key input_repo_name --arg value github.com/vycoder/portfolio '{ key: $key, value: $value }'
+ writetaskstat input_repo_ref master
+ jq -nc --arg key input_repo_ref --arg value master '{ key: $key, value: $value }'
+ writetaskstat input_repo_path ./
+ jq -nc --arg key input_repo_path --arg value ./ '{ key: $key, value: $value }'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_begin 2024-03-05T11:52:57Z
+ jq -nc --arg key timestamp_begin --arg value 2024-03-05T11:52:57Z '{ key: $key, value: $value }'
+ mkdir -p /tmp/twcr-2c18fe242230
+ pushd /tmp/twcr-2c18fe242230
+ '[' -d .git ']'
+ git clone --depth=1 -b master https://github.com/vycoder/portfolio.git .
/tmp/twcr-2c18fe242230 /twcr
Cloning into '.'...
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_git_clone_complete 2024-03-05T11:52:58Z
+ jq -nc --arg key timestamp_git_clone_complete --arg value 2024-03-05T11:52:58Z '{ key: $key, value: $value }'
++ git rev-parse HEAD
+ writetaskstat exec_repo_commit_sha c8f548ae39ac7aa09d79aee8aa487a2a39be62c0
+ jq -nc --arg key exec_repo_commit_sha --arg value c8f548ae39ac7aa09d79aee8aa487a2a39be62c0 '{ key: $key, value: $value }'
+++ git show --no-patch --format=%ci
++ date -u --date '2022-07-31 21:29:19 +0800' +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat exec_repo_commit_date 2022-07-31T13:29:19Z
+ jq -nc --arg key exec_repo_commit_date --arg value 2022-07-31T13:29:19Z '{ key: $key, value: $value }'
+ '[' -z ./ ']'
+ pushd ./
+ tailwind_config_file_name=
+ '[' -f tailwind.config.js ']'
+ tailwind_config_file_name=tailwind.config.js
+ writetaskstat exec_tailwind_config_file tailwind.config.js
+ jq -nc --arg key exec_tailwind_config_file --arg value tailwind.config.js '{ key: $key, value: $value }'
/tmp/twcr-2c18fe242230 /tmp/twcr-2c18fe242230 /twcr
+ cp tailwind.config.js /twcr/mnt/results/extract-raw-tailwind-config.js
+ '[' '!' -f package.json ']'
+ cp package.json /twcr/mnt/results/extract-raw-package.json
++ /twcr/worker/../worker/pm-detect.sh /tmp/twcr-2c18fe242230
+ package_manager_name=yarn
+ '[' -z yarn ']'
+ '[' -z yarn ']'
+ writetaskstat exec_node_package_manager yarn
+ jq -nc --arg key exec_node_package_manager --arg value yarn '{ key: $key, value: $value }'
+ attempt_mode=squash
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_squash_begin 2024-03-05T11:52:58Z
+ jq -nc --arg key timestamp_attempt_squash_begin --arg value 2024-03-05T11:52:58Z '{ key: $key, value: $value }'
+ [[ squash == \s\q\u\a\s\h ]]
+ set +e
+ node /twcr/worker/../worker/squash-package.mjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ cat package.json
+ sed 's/^/>>> /'
>>> {
>>>   "name": "andremadarang",
>>>   "private": true,
>>>   "dependencies": {},
>>>   "devDependencies": {}
>>> }+ rm -f package-lock.json pnpm-lock.yaml yarn.lock
+ '[' ./ '!=' ./ ']'
+ set +e
+ /twcr/worker/../worker/pm-install.sh yarn /tmp/twcr-2c18fe242230 /twcr/mnt/results
+ package_manager_name=yarn
+ procdir=/tmp/twcr-2c18fe242230
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ '[' -z http://tid_df170b505e6c:ok@172.18.0.2:3128 ']'
+ yarn config set httpProxy http://tid_df170b505e6c:ok@172.18.0.2:3128
yarn config v1.22.19
success Set "httpProxy" to "http://tid_df170b505e6c:ok@172.18.0.2:3128".
Done in 0.04s.
+ '[' -z http://tid_df170b505e6c:ok@172.18.0.2:3128 ']'
+ yarn config set httpsProxy http://tid_df170b505e6c:ok@172.18.0.2:3128
yarn config v1.22.19
success Set "httpsProxy" to "http://tid_df170b505e6c:ok@172.18.0.2:3128".
Done in 0.03s.
+ yarn install
yarn install v1.22.19
info No lockfile found.
[1/4] Resolving packages...
[2/4] Fetching packages...
[3/4] Linking dependencies...
[4/4] Building fresh packages...
success Saved lockfile.
Done in 0.06s.
+ yarn list --depth=0 --json --non-interactive --no-progress
+ jq -cr '
        [.. | .name?]
        | map(select(.))
        | map(capture("^(?<name>@?[^@]+)@(?<version>.+)$"))
        | sort_by(.name)[]'
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=null
+ tailwind_config_exporter=tailwind.config.exporter2.cjs
+ '[' -f node_modules/tailwindcss/lib/lib/load-config.js ']'
+ cp /twcr/worker/../worker/tailwind.config.exporter2.cjs ./
+ set +e
+ node ./tailwind.config.exporter2.cjs tailwind.config.js
node:internal/modules/cjs/loader:1152
  throw err;
  ^

Error: Cannot find module 'tailwindcss/resolveConfig.js'
Require stack:
- /tmp/twcr-2c18fe242230/tailwind.config.exporter2.cjs
    at Module._resolveFilename (node:internal/modules/cjs/loader:1149:15)
    at Module._load (node:internal/modules/cjs/loader:990:27)
    at Module.require (node:internal/modules/cjs/loader:1237:19)
    at require (node:internal/modules/helpers:176:18)
    at Object.<anonymous> (/tmp/twcr-2c18fe242230/tailwind.config.exporter2.cjs:1:23)
    at Module._compile (node:internal/modules/cjs/loader:1378:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1437:10)
    at Module.load (node:internal/modules/cjs/loader:1212:32)
    at Module._load (node:internal/modules/cjs/loader:1028:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [ '/tmp/twcr-2c18fe242230/tailwind.config.exporter2.cjs' ]
}

Node.js v21.6.2
+ exitcode=1
+ set -e
+ [[ 1 != \0 ]]
+ [[ squash == \s\q\u\a\s\h ]]
+ echo '[worker] WARN: exporter failed; retrying with full install'
[worker] WARN: exporter failed; retrying with full install
+ attempt_mode=full
+ continue
+ true
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_full_begin 2024-03-05T11:53:00Z
+ jq -nc --arg key timestamp_attempt_full_begin --arg value 2024-03-05T11:53:00Z '{ key: $key, value: $value }'
+ [[ full == \s\q\u\a\s\h ]]
+ git clean -fdx
Removing node_modules/
Removing tailwind.config.exporter2.cjs
+ git reset --hard
HEAD is now at c8f548a Update netlify.toml
+ set +e
+ /twcr/worker/../worker/pm-install.sh yarn /tmp/twcr-2c18fe242230 /twcr/mnt/results
+ package_manager_name=yarn
+ procdir=/tmp/twcr-2c18fe242230
+ datadir=/twcr/mnt/results
+ case "${package_manager_name}" in
+ '[' -z http://tid_df170b505e6c:ok@172.18.0.2:3128 ']'
+ yarn config set httpProxy http://tid_df170b505e6c:ok@172.18.0.2:3128
yarn config v1.22.19
success Set "httpProxy" to "http://tid_df170b505e6c:ok@172.18.0.2:3128".
Done in 0.04s.
+ '[' -z http://tid_df170b505e6c:ok@172.18.0.2:3128 ']'
+ yarn config set httpsProxy http://tid_df170b505e6c:ok@172.18.0.2:3128
yarn config v1.22.19
success Set "httpsProxy" to "http://tid_df170b505e6c:ok@172.18.0.2:3128".
Done in 0.04s.
+ yarn install
yarn install v1.22.19
[1/4] Resolving packages...
[2/4] Fetching packages...
(node:231) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
warning mini-css-extract-plugin@0.5.0: Invalid bin field for "mini-css-extract-plugin".
warning url-loader@1.1.2: Invalid bin field for "url-loader".
[3/4] Linking dependencies...
warning "gridsome-plugin-remark-shiki > shiki > shiki-themes > vscode-textmate@4.0.1" has unmet peer dependency "oniguruma@^7.0.0".
warning "gridsome-plugin-remark-shiki > shiki > onigasm > tslint@5.20.1" has unmet peer dependency "typescript@>=2.3.0-dev || >=2.4.0-dev || >=2.5.0-dev || >=2.6.0-dev || >=2.7.0-dev || >=2.8.0-dev || >=2.9.0-dev || >=3.0.0-dev || >= 3.1.0-dev || >= 3.2.0-dev".
warning "gridsome-plugin-remark-shiki > shiki > onigasm > tslint > tsutils@2.29.0" has unmet peer dependency "typescript@>=2.1.0 || >=2.1.0-dev || >=2.2.0-dev || >=2.3.0-dev || >=2.4.0-dev || >=2.5.0-dev || >=2.6.0-dev || >=2.7.0-dev || >=2.8.0-dev || >=2.9.0-dev || >= 3.0.0-dev || >= 3.1.0-dev".
warning " > vue-fuse@2.2.1" has unmet peer dependency "vue@^2.6.10".
[4/4] Building fresh packages...
Done in 56.35s.
+ yarn list --depth=0 --json --non-interactive --no-progress
+ jq -cr '
        [.. | .name?]
        | map(select(.))
        | map(capture("^(?<name>@?[^@]+)@(?<version>.+)$"))
        | sort_by(.name)[]'
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
++ jq -sr 'map(select(.name == "tailwindcss")) | first | .version'
+ tailwind_package_version=1.5.1
+ tailwind_config_exporter=tailwind.config.exporter2.cjs
+ '[' -f node_modules/tailwindcss/lib/lib/load-config.js ']'
+ cp /twcr/worker/../worker/tailwind.config.exporter2.cjs ./
+ set +e
+ node ./tailwind.config.exporter2.cjs tailwind.config.js
+ exitcode=0
+ set -e
+ [[ 0 != \0 ]]
+ echo 'module.exports={plugins:['
+ jq -rs '
        map(select(.name | startswith("@tailwindcss/")))
        | map("require(" + ( .name | tojson ) + "),")[]
      '
+ grep -Ev '"@tailwindcss/postcss7-compat"'
+ true
+ echo ']}'
+ cat tailwind.config.js
+ sed 's/^/>>> /'
>>> module.exports={plugins:[
>>> ]}
+ node ./tailwind.config.exporter2.cjs tailwind.config.js
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_attempt_full_end 2024-03-05T11:53:58Z
+ jq -nc --arg key timestamp_attempt_full_end --arg value 2024-03-05T11:53:58Z '{ key: $key, value: $value }'
+ break
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ writetaskstat timestamp_end 2024-03-05T11:53:58Z
+ jq -nc --arg key timestamp_end --arg value 2024-03-05T11:53:58Z '{ key: $key, value: $value }'
+ rm /twcr/mnt/results/extract-failed
+ touch /twcr/mnt/results/extract-completed
